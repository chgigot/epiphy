[{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"variable-definitions","dir":"Articles","previous_headings":"","what":"Variable definitions","title":"Definitions and relationships between parameters","text":"Throughout package epiphy, special attention given stay consistent consistent variable parameter names. significant names followings: \\(x\\), \\(y\\) \\(z\\) correspond three spatial dimensions. Note currently implemented method deals third dimension \\(z\\); \\(t\\) stands temporal dimension, ; \\(\\) corresponds used disease intensity metric. Intensity data can either count, incidence severity data. Note implemented methods severity data moment. \\(n\\) denotes number individuals sampling unit disease incidence data used. Note currently implemented methods work equal size sampling units (.e. one value \\(n\\) given data set). \\(N\\) means total number sampling units data set. \\(p\\) average disease intensity. \\(p = \\sum_k i_k / N\\) count data (\\(p \\[0, +\\infty[\\)) severity data (\\(p \\[0, 1]\\)). \\(p = \\sum_k (i_k/n_k) / N\\) incidence data, .e. \\(p\\) average proportion (\\(p \\[0, 1]\\)).","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"definitions","dir":"Articles","previous_headings":"Parameters of the beta-binomial distribution","what":"Definitions","title":"Definitions and relationships between parameters","text":"aggregation parameter, \\(\\theta\\), can computed two shape parameters beta-binomial distribution, \\(\\alpha\\) \\(\\beta\\). Note epiphy, \\(\\theta = 1 / (\\alpha + \\beta)\\) Madden, Hughes, Bosch (2007), definition necessarily consistent can found somewhere else literature. example, \\(\\theta = \\alpha + \\beta\\) package emdbook. intra-cluster correlation coefficient, \\(\\rho\\) (Mak 1988), characterizes spatial aggregation tendency elements sampling unit disease status frequently expected basis spatial randomness (Madden, Hughes, Bosch 2007). epiphy, \\(\\rho = \\theta / (\\theta + 1)\\).","code":""},{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"base-relationships","dir":"Articles","previous_headings":"Parameters of the beta-binomial distribution","what":"Base relationships","title":"Definitions and relationships between parameters","text":"Functions two shape parameters beta-binomial distribution (\\(\\alpha\\) \\(\\beta\\)): \\[p = \\frac{\\alpha}{\\alpha + \\beta}; \\theta = \\frac{1}{\\alpha + \\beta}; \\rho = \\frac{1}{\\alpha + \\beta + 1}\\] Functions aggregation parameter (\\(\\theta\\)) intra-cluster correlation coefficient (\\(\\rho\\)): \\[\\theta = \\frac{\\rho}{1 - \\rho}; \\rho = \\frac{\\theta}{\\theta + 1}\\] Functions average disease intensity (\\(p\\)) aggregation parameter (\\(\\theta\\)): \\[\\alpha = \\frac{p}{\\theta}; \\beta = \\frac{1 - p}{\\theta}\\] Functions average disease intensity (\\(p\\)) intra-cluster correlation coefficient (\\(\\rho\\)): \\[\\alpha = \\frac{p(1-\\rho)}{\\rho}; \\beta = \\frac{(1 - p)(1-\\rho)}{\\rho}\\]","code":""},{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"parameters-of-the-binary-power-law","dir":"Articles","previous_headings":"","what":"Parameters of the binary power law","title":"Definitions and relationships between parameters","text":"different parametrizations binary form power law. user therefore cautious making computations comparisons published results. reminders definitions relationships different parametrizations.","code":""},{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"two-possible-formulas-for-parametrization","dir":"Articles","previous_headings":"Parameters of the binary power law","what":"Two possible formulas for parametrization","title":"Definitions and relationships between parameters","text":"\\[ s_{obs}^2 = V_n = A_n [np(1-p)]^b = a_n [p(1-p)]^b \\] \\[ s_{obs}^2 = V_p = A_p [p(1-p)/n]^b = a_p [p(1-p)]^b \\] \\(s_{obs}^2\\) stands observed variance. relationships different binary power law parameters (\\(A_p\\), \\(a_p\\), \\(A_n\\), \\(a_n\\) \\(b\\)) specified following relationship tables. Note \\(V_n = n^2 V_p\\).","code":""},{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"relationship-tables","dir":"Articles","previous_headings":"Parameters of the binary power law","what":"Relationship tables","title":"Definitions and relationships between parameters","text":"Full version. Reader-friendly version. read , formula \\(\\text{row} = \\text{col} \\times \\text{cell}\\) must used. Note function a2a kindly provided epiphy make tricky conversions easy possible.","code":""},{"path":"https://chgigot.github.io/epiphy/articles/defs-and-eqns.html","id":"relationship-between-beta-binomial-and-binary-power-law-parameters","dir":"Articles","previous_headings":"","what":"Relationship between beta-binomial and binary power law parameters","title":"Definitions and relationships between parameters","text":"\\[ \\theta = \\frac{a_p - f(p)/n}{f(p) - a_p} \\text{, } f(p) = [p(1-p)]^{1-b} \\]","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Analyzing plant disease epidemics with the R package epiphy","text":"paper presents R package epiphy provides common framework spatialized plant disease intensity data collected one time points. Many statistical methods developed last decades describe quantify plant disease epidemics implemented. paper introduction framework concepts provided tools using different sample codes illustrate possible workflows. Keywords: plant disease epidemics, phytopathology, spatial data, spatial aggregation, aggregation index, beta-binomial distribution, Taylor’s power law, binary power law, spatial hierarchy analysis, SADIE, R.","code":""},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Analyzing plant disease epidemics with the R package epiphy","text":"Performing analyses plant disease intensity data common task many field phytopathologists. Different softwares developped make computationally available statistical methods, separated programs sometimes restricted specific computer system. paper describes version 0.5.0 package epiphy R (R Core Team 2015), offers uniform coherent framework perform spatial analyses plant disease epidemics. Efforts made ensure users can fluently fluidly carry data analyses meet needs, making possible generalize automate tasks, piece together sequence operations, limiting need reimplementing methods described scientific literature save time reduce potential error. Another key advantage package allow users unfamiliar methods (e.g. students, scientists) use safeguards misuses methods specific given kind data set instance. firstly intented toolbox phytopathologists, implemented methods may easily translatable data contexts. package consists three components: bundle historical data sets plant disease epidemiology, set relevant data classes reliably efficiently handle date sets, statistical methods developped last decades extract information collected data sets. Information different components given paper, main amphasis made practical tools using code examples. epiphy package yet available CRAN, one needs use following lines install :","code":"install.packages(\"devtools\") # If not already installed. devtools::install_github(\"chgigot/epiphy\") # Note: Same command for the updates. library(epiphy)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"data-sets","dir":"Articles","previous_headings":"","what":"Data sets","title":"Analyzing plant disease epidemics with the R package epiphy","text":"package epiphy provided bundle 10 historical data sets mainly published plant disease epidemiology literature. , example, counts arthropods made wheat field UK 1996 (Holland, Winder, Perry 1999) incidence tomato spotted wilt virus (TSWV) disease recorded field trials Waite Institute (Australia) 1929 (Cochran 1936). two data sets (called arthropods tomato_tswv$field_1929 epiphy) used throughout paper. take look available data sets, type data(package = \"epiphy\"). data set supported relevant documentation specifying briefly context data collection, data structure published references. Note need use function data load provided data set already lazily loaded epiphy loaded. means occupy memory use . two examples, \\(x\\) \\(y\\) correspond spatial coordinates sampling units distributed regular two-dimensional grid. Specifically \\(x\\) \\(y\\) row id within-row sampling unit id, respectively. \\(t\\) variable stands assessment time date. six three recording dates counts arthropods TSWV incidence data sets, respectively. \\(\\) variable corresponds number recorded individuals (arhtropods diseased plants) sampling unit. \\(n\\), incidence data sets, total number individuals sampling unit. raw TSWV incidence data set, \\(n = 1\\) everywhere, means sampling unit contains one plant \\(\\) can equal 0 (plant healthy) 1 (plant diseased).","code":"str(arthropods) ## 'data.frame':    378 obs. of  6 variables: ##  $ x : int  1 2 3 4 5 6 7 1 2 3 ... ##  $ y : int  1 1 1 1 1 1 1 2 2 2 ... ##  $ xm: int  0 30 60 90 120 150 180 0 30 60 ... ##  $ ym: int  0 0 0 0 0 0 0 30 30 30 ... ##  $ t : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ i : int  29 32 2 24 20 10 26 21 25 12 ... str(tomato_tswv$field_1929) ## 'data.frame':    4320 obs. of  5 variables: ##  $ x: int  1 1 1 1 1 1 1 1 1 1 ... ##  $ y: int  1 2 3 4 5 6 7 8 9 10 ... ##  $ t: int  1 1 1 1 1 1 1 1 1 1 ... ##  $ i: int  0 1 0 1 0 0 0 0 1 0 ... ##  $ n: int  1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"conceptual-framework","dir":"Articles","previous_headings":"","what":"Conceptual framework","title":"Analyzing plant disease epidemics with the R package epiphy","text":"order collect spatial plant disease data, appropriate sampling unit (quadrat sample unit cluster) corresponding location assessments carried must chosen. may plant unit (typically leaf case foliar pathogens), indivudal plant cluster nearby plants. different ways recording disease levels (disease intensity) sometimes confusing literature. strive stick nomenclature proposed McRoberts, Hughes, Madden ( 2003) count visible symptoms (lesions), presence absence disease, assessment proportion plant tissue diseased correspond count, incidence severity data, respectively. reliably handle kinds observational data sets, package epiphy relies definition set relevant classes. mother class, named intensity, makes possible format disease data sets analyses check everything fine provided data (e.g. input data must data frame). Object creation possible one three subclasses intensity count, incidence severity eponymous kinds data. (Note implemented methods severity class moment.) Count data integers starting zero upper limit, incidence data differ upper limit set equal number individuals sampling unit. Severity data correspond percentages ranging 0 100%. creating object one subclasses intensity, necessary perform variable mapping describe variables input data frame mapped spatial, temporal observational properties analysis methods described later section. reserved variable names spatial information correspond three spatial dimensions, x, y z. (Note currently implemented method deals third dimension z). t used map temporal information. Finally, n reserved -called observational properties. stand recorded intensity number individuals sampling unit, respectively. Variable mapping can implicit, () reserved names already present column names input data frame, explicit, user make links reserved names column names using function mapping. Note paradigm similar one used ggplot2 package function aes. useful information displayed print intensity object, exact nature object (count, incidence severity). Mapping variables (squared brackets) mapped variables (just mapping variables) also printed. can also plot objects vizualize data convenient way.  Figure 1. Observation sequences maps counts arthropods time. possible perform useful data transformation directly intensity objects. example, clump function can used regroup adjacent sampling units bigger ones, thus redefine sampling unit given data set. extended version split also implemented deal intensity objects efficient way. addition, can use .data.frame anytime want retrieve underlying data frame intensity object (without mapping).  Figure 2. Observation sequences maps TSWV incidence data time two definition sampling unit. sampling unit contains either one tomato plant (), set 9 plants (). case, three maps correspond field different dates.  Figure 3. Different sub-parts TSWV incidence data set, observed first scoring time (left) subpart scoring time (right).","code":"# Count data # We will use only the last assessment date for the arthropods data set: arthropods_t6 <- arthropods[arthropods$t == 3, ] # - Explicit mapping: (cou_t3 <- count(arthropods_t6, mapping(x = x, y = y, t = t, i = i))) ## # A mapped object: count class ## # dim: 2 space, 1 time, 1 obs ##   [x] [y]   .  . [t] [i] ##     x   y  xm ym   t   i ## 1   1   1   0  0   3   3 ## 2   2   1  30  0   3  26 ## 3   3   1  60  0   3  10 ## 4   4   1  90  0   3   8 ## 5   5   1 120  0   3  16 ## 6   6   1 150  0   3  12 ## # ... with 57 more records (rows) # - Total implicit mapping: cou_t3_bis <- count(arthropods_t6) # - Partial implicit mapping: cou_t3_ter <- count(arthropods_t6, mapping(i = i)) all(identical(cou_t3, cou_t3_bis), identical(cou_t3, cou_t3_ter)) ## [1] TRUE # Implicit mapping for incidence data: (inc <- incidence(tomato_tswv$field_1929)) ## # A mapped object: incidence class ## # dim: 2 space, 1 time, 2 obs ##   [x] [y] [t] [i] [n] ##     x   y   t   i   n ## 1   1   1   1   0   1 ## 2   1   2   1   1   1 ## 3   1   3   1   0   1 ## 4   1   4   1   1   1 ## 5   1   5   1   0   1 ## 6   1   6   1   0   1 ## # ... with 4314 more records (rows) plot(cou_t3, tile = FALSE, size = 5) inc9 <- clump(inc, unit_size = c(x = 3, y = 3)) plot(inc) plot(inc9) inc9_t1 <- split(inc9, by = \"t\")[[1]] inc9_t1_sub <- split(inc9_t1, unit_size = c(x = 4, y = 5))[[6]] plot(inc9_t1) plot(inc9_t1_sub)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"statistical-methods","dir":"Articles","previous_headings":"","what":"Statistical methods","title":"Analyzing plant disease epidemics with the R package epiphy","text":"collection statistical methods implemented epiphy. moment, available tools include several indices aggregation (e.g. Fisher’s, Lloyd’s Morisita’s indices), distribution fitting reveal spatial aggregation data sets, power law analysis (Taylor’s binary forms) early version Spatial Analysis Distance IndicEs (SADIE). strived mention relevant scientific literature related method corresponding R help pages. time, function dedicated methods clever enough know “flavor” method needs used provided data set. example, use function power_law count data set, regular Taylor’s power law called, whereas case incidence data, binary form power law. reason , addition performing initial compliance tests, set dedicated classes implemented handle different kinds intensity data sets. case, function outputs let know flavor used perform analysis.","code":""},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"aggregation-indices","dir":"Articles","previous_headings":"Statistical methods","what":"Aggregation indices","title":"Analyzing plant disease epidemics with the R package epiphy","text":"index aggregation incidence data calculated default agg_index function used data set. function called count data, corresponding version index (also called Fisher’s index aggregation) calculated. indices may calculated agg_index, Lloyd’s index patchiness Morisita’s coefficient dispersion. index calculated default can tested using chi-squared test, z-test c(\\(\\alpha\\)) test. example, null hypothesis non-aggregation rejected.","code":"(inc9_t1_idx <- agg_index(inc9_t1)) ## Fisher's index of dispersion: ## (Version for incidence data) ## 1.4 chisq.test(inc9_t1_idx) ##  ##  Chi-squared test for (N - 1)*index following a chi-squared distribution ##  (df = N - 1) ##  ## data:  inc9_t1_idx ## X-squared = 222.56, df = 159, p-value = 0.0006578 z.test(inc9_t1_idx) ##  ##  One-sample z-test ##  ## data:  inc9_t1_idx ## z = 3.7803, p-value = 0.0001566 ## alternative hypothesis: two.sided calpha.test(inc9_t1_idx) ##  ##  C(alpha) test ##  ## data:  inc9_t1_idx ## z = 3.7092, p-value = 0.0002079"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"distribution-fitting","dir":"Articles","previous_headings":"Statistical methods","what":"Distribution fitting","title":"Analyzing plant disease epidemics with the R package epiphy","text":"name implies, function fit_two_distr try fit two different distributions given data set. One distribution supposed representative random pattern, second one denote aggregated pattern. count data, default distributions Poisson negative binomial random aggregated patterns, respectively. incidence data, default distributions binomial beta-binomial random aggregated patterns, respectively (Hughes Madden 1993; Madden Hughes 1995). latter case, fit_two_distr may viewed alternative BBD software (Madden Hughes 1994). Note epiphy provides also set handy functions work beta-binomial distribution (dbetabinom, pbetabinom, qbetabinom rbetabinom).  Figure 4. Frequency distributions count arthropods wheat field UK 12 July 1996 (left), incidence TSWV disease tomato field Australia 18 December 1930 (right). assessments arthropods counts TSWV incidence reported Perry et al. ( 1999) Cochran ( 1936), respectively. black bars represent observed frequencies, grey bars represent expected aggregated frequencies (negative binomial left beta-binomial right), white bars represent expected random frequencies (Poisson left binomial right).","code":"cou_t3_distr <- fit_two_distr(cou_t3) summary(cou_t3_distr) ## Fitting of two distributions by maximum likelihood ## for 'count' data. ## Parameter estimates: ##  ## (1) Poisson (random): ##        Estimate  Std.Err Z value    Pr(>z)     ## lambda 11.68254  0.43062  27.129 < 2.2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## (2) Negative binomial (aggregated): ##       Estimate   Std.Err Z value    Pr(>z)     ## k     3.308038  0.742318  4.4564 8.336e-06 *** ## mu   11.682540  0.916690 12.7443 < 2.2e-16 *** ## prob  0.220675  0.040883  5.3977 6.748e-08 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 inc9_t1_distr <- fit_two_distr(inc9_t1) summary(inc9_t1_distr) ## Fitting of two distributions by maximum likelihood ## for 'incidence' data. ## Parameter estimates: ##  ## (1) Binomial (random): ##      Estimate  Std.Err Z value    Pr(>z)     ## prob 0.181250 0.010151  17.855 < 2.2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## (2) Beta-binomial (aggregated): ##        Estimate   Std.Err Z value    Pr(>z)     ## alpha  3.671093  1.457761  2.5183  0.011792 *   ## beta  16.574710  6.665468  2.4867  0.012895 *   ## prob   0.181326  0.011913 15.2204 < 2.2e-16 *** ## rho    0.047068  0.017943  2.6232  0.008711 **  ## theta  0.049393  0.019759  2.4997  0.012428 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 plot(cou_t3_distr, breaks = 17) plot(inc9_t1_distr)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"power-law","dir":"Articles","previous_headings":"Statistical methods","what":"Power law","title":"Analyzing plant disease epidemics with the R package epiphy","text":"Taylor’s power law can used assess overall degree heterogeneity collection count data sets sampling-unit scale (Taylor 1961). binary form power law proposed deal incidence data (Hughes Madden 1992). Taylor’s binary power laws describe relationship observed variance diseased individuals (individuals interest) within data set corresponding variance assumption data random distribution distribution (.e., Poisson binomial count incidence data, respectively). sake illustration, count arthropods splitted data sets 9 sampling units (3 rows \\(\\times\\) 3 sampling units \\(\\times\\) 1 recording date) performing Taylor’s power law analysis data set. also give example use binary form power law, split TSWV incidence data data sets 20 sampling units (4 rows \\(\\times\\) 5 sampling units 9 plants \\(\\times\\) 1 recording date) order also simulate collection different data sets.  Figure 5. Relationship logarithm observed variance logarithm theoretical variance counts arthropods carryied UK (left) incidence data TSWV disease collected Australia (right). Solid lines indicate linear relationship (logarithmic axes) observed theoretical random variances. Dashed lines indicate cases variances equal (suggests absence aggregation).","code":"cou <- count(arthropods[arthropods$x <= 6, ]) cou <- split(cou, unit_size = c(x = 3, y = 3)) cou_plaw <- power_law(cou) coef(summary(cou_plaw)) ##                             Estimate Std. Error    t value     Pr(>|t|) ## (Intercept): log_base(Ar) -0.1191721  0.5650426 -0.2109082 8.342179e-01 ## log(x): b                  1.5752164  0.2010455  7.8351249 4.035639e-09 inc9_spl <- split(inc9, unit_size = c(x = 4, y = 5)) inc_plaw <- power_law(inc9_spl) coef(summary(inc_plaw)) ##                             Estimate Std. Error   t value     Pr(>|t|) ## (Intercept): log_base(Ar)  0.5533101 1.04346689 0.5302613 6.012425e-01 ## log(x): b                  1.0994981 0.27222117 4.0389883 5.484494e-04 ## Ai                         1.7389998 1.81458867 0.9583438 3.483037e-01 ## ai                         0.1552786 0.06965083 2.2293866 3.631573e-02 ## AI                         1.1230753 0.19158067 5.8621535 6.727429e-06 ## aI                        12.5775689 5.64171735 2.2293866 3.631573e-02 plot(cou_plaw) plot(inc_plaw)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"spatial-hierarchy","dir":"Articles","previous_headings":"Statistical methods","what":"Spatial hierarchy","title":"Analyzing plant disease epidemics with the R package epiphy","text":"carry spatial hierarchy analyses (Hughes et al. 1997), necessary prepare existing data sets. , threshold function primary interest. graphics editors, allows “simplify” image sense every value given threshold given value 0 1, respectively. default, everything 0 given 1, 0 stays 0. threshold thus useful report whole sampling unit “healthy” (0), diseased individual found within sampling unit, “diseased” (1) least one diseased individual found.  Figure 6. Disease incidence TSWV sampling units consisting 9 tomato plants, plant level (left) sampling unit level (right). figures made using intensively mapped TSWV incidence data reported Cochran ( 1936) first assessment performed 18 December 1929. sake illustration, TSWV incidence data reported Cochran ( 1936) first splitted data sets 20 sampling units (4 rows \\(\\times\\) 5 sampling units 9 plants \\(\\times\\) 1 recording date) simulate collection different incidence data sets. , disease incidence sampling unit level calculated, performing spatial hierarchy analysis.  Figure 7. Relationship incidences TSWV disease tomato plant sampling unit level (made 9 plants) two level spatial hierarchy sampling unit highest level plant lowest level. Dashed curve binomial fit data solid curve beta-binomial fit data. graph based 24 data sets incidence TSWV disease collected 1929 field trials Australia.","code":"plot(inc9_t1) plot(threshold(inc9_t1)) inc_low     <- split(inc9, unit_size = c(x = 4, y = 5, t = 1)) inc_high    <- lapply(inc_low, threshold) (inc_sphier <- spatial_hier(inc_low, inc_high)) ## Spatial hierarchy analysis for 'incidence' data. ##  ## Parameter estimate: ##        Estimate Std. Error ## log_nu 2.052793 0.08445315 ## nu     7.789630 0.65785878 plot(inc_sphier)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"spatial-analysis-by-distance-indices-sadie","dir":"Articles","previous_headings":"Statistical methods","what":"Spatial Analysis by Distance IndicEs (SADIE)","title":"Analyzing plant disease epidemics with the R package epiphy","text":"two-dimensional geostatistical approach uses relative locations sampling units number diseased individuals per sampling unit quantify spatial arrangement diseased individuals calculating distance regularity (Perry 1995). Regularity defined state sampling unit given data set contains number diseased individuals (.e., mean number diseased individuals data set). SADIE procedure uses transportation algorithm calculate distance regularity, performs randomization test determine observed distance regularity particularly small large. epiphy implements early version cross-plateform SADIE procedure. perform SADIE analysis, spatial coordinates must reflect real relative distances different sampling units. mapped \\(x\\) \\(y\\) variables grid coordinates, can use remap function map metric coordinates (data set).  Figure 8. Maps clustering indices index symbols alone (top) interpolated landscape contours (bottom). top map, symbols filled blue (receivers) red (donors) color indicate absolute values Perry’s indices > 1.5.","code":"set.seed(123) cou_t3_m <- remap(cou_t3, mapping(x = xm, y = ym)) plot(cou_t3_m) res <- sadie(cou_t3_m) ## Computation of Perry's indices: summary(res) ##  ## Call: ## sadie.count(data = cou_t3_m) ##  ## First 6 rows of clustering indices: ##     x y  i cost_flows      idx_P idx_LMX prob ## 1   0 0  3  -30.00000 -0.4708909      NA   NA ## 2  30 0 26   40.23662  0.7460930      NA   NA ## 3  60 0 10  -53.08882 -1.2326789      NA   NA ## 4  90 0  8    0.00000  0.0000000      NA   NA ## 5 120 0 16   30.00000  0.7601079      NA   NA ## 6 150 0 12   30.00000  0.8107080      NA   NA ##  ## Summary indices: ##                       overall    inflow  outflow ## Perry's index        1.171517 -1.310935 1.073955 ## Li-Madden-Xu's index       NA        NA       NA ##  ## Main outputs: ## Ia: 1.1414 (Pa = 0.14) ##  ## 'Total cost': 1274.105 ## Number of permutations: 100 plot(res) plot(res, isoclines = TRUE)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"map-comparison-mapcomp","dir":"Articles","previous_headings":"Statistical methods","what":"Map comparison (MAPCOMP)","title":"Analyzing plant disease epidemics with the R package epiphy","text":"MAPCOMP procedure proposed Lavigne et al. ( 2010) relies calculation Hellinger distance density map recorded intensity data density map sampling effort.  Figure 9. Density map.","code":"set.seed(123) res <- mapcomp(cou_t3_m, delta = 4, bandwidth = 60) res ## Map Comparison analysis (mapcomp) ##  ## Call: ## mapcomp.count(data = cou_t3_m, delta = 4, bandwidth = 60) ##  ## Stat: 0.0989 (P = 0.019802) plot(res)"},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Analyzing plant disease epidemics with the R package epiphy","text":"package epiphy implements currently many methods described chapter 9 book “study plant disease epidemics” (Madden, Hughes, Bosch 2007). hope statistical methods packaged consistent way easily used open statistical environment facilitate use spread phytopathology community, even beyond.","code":""},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Analyzing plant disease epidemics with the R package epiphy","text":"authors grateful Prof. Xiangming Xu discussion advice regarding SADIE procedure.","code":""},{"path":"https://chgigot.github.io/epiphy/articles/epiphy.html","id":"annexes","dir":"Articles","previous_headings":"","what":"Annexes","title":"Analyzing plant disease epidemics with the R package epiphy","text":"functions package epiphy designed compatible pipeline coding. Using package magrittr, can pipe analyses following examples.  information, analyses without pipes. another example:","code":"library(epiphy) library(magrittr)  incidence(tomato_tswv$field_1929) %>%     split(by = \"t\") %>%     getElement(1) %>% # To keep the first assessment time.     clump(unit_size = c(x = 3, y = 3)) %>%     fit_two_distr() %T>%     plot() %>%     summary() ## Fitting of two distributions by maximum likelihood ## for 'incidence' data. ## Parameter estimates: ##  ## (1) Binomial (random): ##      Estimate  Std.Err Z value    Pr(>z)     ## prob 0.181250 0.010151  17.855 < 2.2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## (2) Beta-binomial (aggregated): ##        Estimate   Std.Err Z value    Pr(>z)     ## alpha  3.671093  1.457761  2.5183  0.011792 *   ## beta  16.574710  6.665468  2.4867  0.012895 *   ## prob   0.181326  0.011913 15.2204 < 2.2e-16 *** ## rho    0.047068  0.017943  2.6232  0.008711 **  ## theta  0.049393  0.019759  2.4997  0.012428 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 my_data <- incidence(tomato_tswv$field_1929) my_data <- split(my_data, by = \"t\") my_data <- my_data[[1]] my_data <- clump(my_data, unit_size = c(x = 3, y = 3)) my_res  <- fit_two_distr(my_data) plot(my_res) summary(my_res) count(arthropods) %>%     clump(unit_size = c(x = 3, y = 3)) %>%     split(by = \"t\") %>%     lapply(agg_index) %T>%     (function(x) plot(sapply(x, function(xx) xx$index), type = \"b\",                       xlab = \"Observation sequence\",                       ylab = \"Aggregation index\")) %>%     sapply(function(x) chisq.test(x)$p.value) ##            1            2            3            4            5            6  ## 1.523216e-07 5.594987e-08 1.549744e-07 2.979618e-13 9.080714e-19 3.287662e-07"},{"path":[]},{"path":"https://chgigot.github.io/epiphy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christophe Gigot. Author, maintainer, copyright holder. Adam H. Sparks. Contributor. Katrin Leinweber. Contributor.","code":""},{"path":"https://chgigot.github.io/epiphy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gigot C (2023). epiphy: Analysis Plant Disease Epidemics. R package version 0.5.0.9000, https://chgigot.github.io/epiphy/, https://github.com/chgigot/epiphy.","code":"@Manual{,   title = {epiphy: Analysis of Plant Disease Epidemics},   author = {Christophe Gigot},   year = {2023},   note = {R package version 0.5.0.9000, https://chgigot.github.io/epiphy/},   url = {https://github.com/chgigot/epiphy}, }"},{"path":[]},{"path":"https://chgigot.github.io/epiphy/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analysis of Plant Disease Epidemics","text":"epiphy makes easy analyze plant disease epidemics. provides common framework plant disease intensity data recorded time /space. Implemented statistical methods currently mainly focused spatial pattern analysis (e.g., aggregation indices, Taylor binary power laws, distribution fitting, SADIE mapcomp methods). Several data sets mainly published plant disease epidemiology literature also included package. online documentation available https://chgigot.github.io/epiphy/.","code":""},{"path":"https://chgigot.github.io/epiphy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of Plant Disease Epidemics","text":"Install latest released version CRAN: Install latest development version GitHub:","code":"install.packages(\"epiphy\") # install.packages(\"devtools\") devtools::install_github(\"chgigot/epiphy\")"},{"path":"https://chgigot.github.io/epiphy/reference/BetaBinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"The beta-binomial distribution. — BetaBinomial","title":"The beta-binomial distribution. — BetaBinomial","text":"Density, distribution function, quantile function random generation beta-binomial distribution parameters size, prob, theta, shape1, shape2. distribution corresponds overdispersed binomial distribution.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/BetaBinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The beta-binomial distribution. — BetaBinomial","text":"","code":"dbetabinom(x, size, prob, theta, shape1, shape2, log = FALSE)  pbetabinom(   q,   size,   prob,   theta,   shape1,   shape2,   lower.tail = TRUE,   log.p = FALSE )  qbetabinom(   p,   size,   prob,   theta,   shape1,   shape2,   lower.tail = TRUE,   log.p = FALSE )  rbetabinom(n, size, prob, theta, shape1, shape2)"},{"path":"https://chgigot.github.io/epiphy/reference/BetaBinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The beta-binomial distribution. — BetaBinomial","text":"x, q Vector quantiles. size Number trials. prob Probability success trial. theta Aggregation parameter (theta = 1 / (shape1 + shape2)). shape1, shape2 Shape parameters. log, log.p Logical; TRUE, probabilities p given log(p). lower.tail Logical; TRUE (default), probabilities \\(P[X \\le x]\\) otherwise, \\(P[X > x]\\). p Vector probabilities. n Number observations.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/BetaBinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The beta-binomial distribution. — BetaBinomial","text":"dbetabinom gives density, pbetabinom gives distribution function, qbetabinom gives quantile function rbetabinom generates random deviates.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/BetaBinomial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The beta-binomial distribution. — BetaBinomial","text":"aware implementation theta = 1 / (shape1 + shape2). prob theta, shape1 shape2 must specified. theta = 0, use *binom family instead.","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/BetaBinomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The beta-binomial distribution. — BetaBinomial","text":"","code":"# Compute P(25 < X < 50) for X following the Beta-Binomial distribution # with parameters size = 100, prob = 0.5 and theta = 0.35: sum(dbetabinom(25:50, size = 100, prob = 0.5, theta = 0.35)) #> [1] 0.3054911  # When theta tends to 0, dbetabinom outputs tends to dbinom outputs: sum(dbetabinom(25:50, size = 100, prob = 0.5, theta = 1e-7)) #> [1] 0.5397943 sum(dbetabinom(25:50, size = 100, shape1 = 1e7, shape2 = 1e7)) #> [1] 0.5397944 sum(dbinom(25:50, size = 100, prob = 0.5)) #> [1] 0.5397945  # Example of binomial and beta-binomial frequency distributions: n   <- 15 q   <- 0:n p1  <- dbinom(q, size = n, prob = 0.33) p2  <- dbetabinom(q, size = n, prob = 0.33, theta = 0.22) res <- rbind(p1, p2) dimnames(res) <- list(c(\"Binomial\", \"Beta-binomial\"), q) barplot(res, beside = TRUE, legend.text = TRUE, ylab = \"Frequency\")   # Effect of the aggregation parameter theta on probability density: thetas <- seq(0.001, 2.5, by = 0.001) density1 <- rep(sum(dbinom(25:50, size = 100, prob = 0.5)), length(thetas)) density2 <- sapply(thetas, function(theta) {     sum(dbetabinom(25:50, size = 100, prob = 0.5, theta = theta)) }) plot(thetas, density2, type = \"l\",      xlab = expression(\"Aggregation parameter (\"*theta*\")\"),      ylab = \"Probability density between 25 and 50 (size = 100)\") lines(thetas, density1, lty = 2)"},{"path":"https://chgigot.github.io/epiphy/reference/a2a.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily switch between different power law formulations. — a2a","title":"Easily switch between different power law formulations. — a2a","text":"a2a designed avoid headaches likely occur working different formulations binomial power law analysis.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/a2a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily switch between different power law formulations. — a2a","text":"","code":"a2a(x, ...)  # S3 method for numeric a2a(   x,   slope,   n,   from = c(\"Ai\", \"ai\", \"AI\", \"aI\"),   to = c(\"Ai\", \"ai\", \"AI\", \"aI\"),   ... )  # S3 method for list a2a(x, to = c(\"Ai\", \"ai\", \"AI\", \"aI\"), ...)"},{"path":"https://chgigot.github.io/epiphy/reference/a2a.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily switch between different power law formulations. — a2a","text":"x Intercept parameter converted named list parameter converted (\"Ai\", \"ai\", \"AI\" \"aI\"), slope (\"slope\"), number individual per sampling unit (\"n\"). ... Additional arguments passed methods. slope Slope parameter. n Number individuals per sampling unit. Kind input intercept parameter (\"Ai\", \"ai\", \"AI\" \"aI\"). Desired kind ouput intercept parameter (\"Ai\", \"ai\", \"AI\" \"aI\").","code":""},{"path":"https://chgigot.github.io/epiphy/reference/a2a.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily switch between different power law formulations. — a2a","text":"numeric vector.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/a2a.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Easily switch between different power law formulations. — a2a","text":"binomial power law can expressed : \\(s_y^2 = (intercept)(s_{bin}^2)^b\\). different forms (intercept) possible depending formulation binomial power law.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/a2a.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily switch between different power law formulations. — a2a","text":"","code":"# Values from the power_law() example: Ai    <- 38.6245 slope <- 1.9356 n     <- 9  # Usual function call syntax: a2a(Ai, slope, n, from = \"Ai\", to = \"ai\") #> 0.5493272  # Other syntaxes: inputs <- list(Ai = Ai, slope = slope, n = n) a2a(inputs, \"ai\") #> 0.5493272 require(magrittr) #> Loading required package: magrittr inputs %>% a2a(\"ai\") #> 0.5493272"},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Several aggregation indices. — agg_index","title":"Several aggregation indices. — agg_index","text":"function can compute different aggregation indices. See \"Details\" section information available indices.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Several aggregation indices. — agg_index","text":"","code":"agg_index(   x,   method = c(\"fisher\", \"lloyd\", \"morisita\"),   flavor = c(\"count\", \"incidence\"),   n = NULL,   ... )"},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Several aggregation indices. — agg_index","text":"x numeric vector count/incidence object. method name method used. \"fisher\" method used default. See details . flavor flavor index must calculated (\"count\" \"incidence\")? n Number individuals per sampling unit. n provided, \"incidence\" flavor calculated whatever value flavor. Note current implementation deals equal size sampling units. ... Additional arguments passed methods.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Several aggregation indices. — agg_index","text":"object class agg_index, list containing following components:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Several aggregation indices. — agg_index","text":"currently three implemented methods compute indices aggregation. fisher: Fisher's index aggregation. case count, index corresponds ratio observed variance observed mean, index also known variance mean ratio. binary variable, similar index can calculated using instead ratio observed variance theoretical variance data follow binomial law (.e. reference distribution random pattern individuals within sampling units). lloyd: Lloyd's index patchiness. value index increases degree aggregation. Note Lloyd's mean crowding can also returned type = \"mean-crowding\" provided parameter. morisita: Morisita's coefficient dispersion. index can computed either count incidence data, interpretation can uncertain. Values Fisher's Lloyd's indices can interpreted follows: index < 1: uniform pattern; index = 1: random pattern; index > 1: aggregated pattern. following table gives information applicability various methods. + means implemented, -, implemented (possible). moment, index aggregation severity data.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Several aggregation indices. — agg_index","text":"Fisher RA. 1925. Statistical methods research workers. Oliver Boyd, Edinburgh. Lloyd M. 1967. Mean crowding. Journal Animal Ecology 36, 1–30. Morisita M. 1962. \\(\\delta\\)-Index, measure dispersion individuals. Researches Population Ecology 4, 1–7. doi:10.1007/BF02533903 Madden LV, Hughes G. 1995. Plant disease incidence: Distributions, heterogeneity, temporal analysis. Annual Review Phytopathology 33(1): 529–564. doi:10.1146/annurev.py.33.090195.002525","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/agg_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Several aggregation indices. — agg_index","text":"","code":"# Count flavor of Fisher's index: my_fisher_count <- agg_index(aphids$i) my_fisher_count #> Fisher's index of dispersion: #> (Version for count data) #> 32.56  # And incidence flavor of Fisher's index: my_fisher_incidence <- agg_index(tobacco_viruses$i, n = tobacco_viruses$n) my_fisher_incidence #> Fisher's index of dispersion: #> (Version for incidence data) #> 3.144  # Either standard R or epiphy idioms can be used: identical(my_fisher_count, agg_index(count(aphids))) #> [1] TRUE identical(my_fisher_incidence, agg_index(incidence(tobacco_viruses))) #> [1] TRUE  # Lloyd's index (only for count data): agg_index(aphids$i, method = \"lloyd\") #> Lloyd's index of patchiness: #> 4.589 # Lloyd's mean crowding: agg_index(aphids$i, method = \"lloyd\", type = \"mean-crowding\") #> Lloyd's mean crowding: #> 40.36  # Count flavor of Morisita's index: agg_index(aphids$i,  method = \"morisita\") #> Morisita's coefficient of dispersion: #> (Version for count data) #> 4.539 # Incidence flavor of Morisita's index: agg_index(tobacco_viruses$i, n = tobacco_viruses$n, method = \"morisita\") #> Morisita's coefficient of dispersion: #> (Version for incidence data) #> 1.295"},{"path":"https://chgigot.github.io/epiphy/reference/aphids.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts of aphids. — aphids","title":"Counts of aphids. — aphids","text":"Counts 554 aphids species Sitobion avenae, sampled 28 June 1996 250 x 180-m field winter wheat near Wimborne, Dorset, UK. 63 sampling units, made inspection five tillers , located 9 x 7 rectangular grid intervals 30 m.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/aphids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts of aphids. — aphids","text":"","code":"aphids"},{"path":"https://chgigot.github.io/epiphy/reference/aphids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Counts of aphids. — aphids","text":"data frame 63 rows 3 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/aphids.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Counts of aphids. — aphids","text":"Perry JN, Winder L, Holland JM, Alston RD. 1999. Red-blue plots     detecting clusters count data. Ecology Letters 2, 106-13.     doi:10.1046/j.1461-0248.1999.22057.x","code":""},{"path":"https://chgigot.github.io/epiphy/reference/arthropods.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts of arthropods. — arthropods","title":"Counts of arthropods. — arthropods","text":"sampling unit made pitfall collect arthropods field organic winter wheat, near Wimborne, Dorset, UK 1996. sampling units located 9 x 7 rectangular grid intervals 30 m. six sampling dates.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/arthropods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts of arthropods. — arthropods","text":"","code":"arthropods"},{"path":"https://chgigot.github.io/epiphy/reference/arthropods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Counts of arthropods. — arthropods","text":"data frame 378 rows 4 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/arthropods.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Counts of arthropods. — arthropods","text":"Holland JM, Winder L, Perry JN. 1999. Arthropod prey farmland     birds: spatial distribution within sprayed field without     buffer zones. Aspects Applied Biology 54: 53-60.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/as.data.frame.intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a data frame. — as.data.frame.intensity","title":"Coerce to a data frame. — as.data.frame.intensity","text":"Functions coerce intensity object data frame.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/as.data.frame.intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a data frame. — as.data.frame.intensity","text":"","code":"# S3 method for intensity as.data.frame(   x,   row.names = NULL,   optional = FALSE,   ...,   stringsAsFactors = FALSE )"},{"path":"https://chgigot.github.io/epiphy/reference/as.data.frame.intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a data frame. — as.data.frame.intensity","text":"x intensity object. row.names NULL character vector giving row     names data frame.  Missing values allowed. optional logical. TRUE, setting row names     converting column names (syntactic names: see     make.names) optional.  Note R's     base package .data.frame() methods use     optional column names treatment, basically     meaning data.frame(*, check.names = !optional).     See also make.names argument matrix method. ... additional arguments passed methods. stringsAsFactors logical: character vector converted     factor?","code":""},{"path":"https://chgigot.github.io/epiphy/reference/as.data.frame.intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a data frame. — as.data.frame.intensity","text":"data frame.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/as.data.frame.intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a data frame. — as.data.frame.intensity","text":"","code":"my_data <- incidence(tomato_tswv$field_1929) head(as.data.frame(my_data)) #>   x y t i n #> 1 1 1 1 0 1 #> 2 1 2 1 1 1 #> 3 1 3 1 0 1 #> 4 1 4 1 1 1 #> 5 1 5 1 0 1 #> 6 1 6 1 0 1"},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":null,"dir":"Reference","previous_headings":"","what":"C(alpha) test. — calpha.test","title":"C(alpha) test. — calpha.test","text":"C(alpha) test test binomial distribution alternative beta-binomial distribution.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"C(alpha) test. — calpha.test","text":"","code":"calpha.test(x, ...)  # S3 method for fisher calpha.test(x, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"C(alpha) test. — calpha.test","text":"x output agg_index function method = \"fisher\" parameter. ... yet implemented.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"C(alpha) test. — calpha.test","text":"kind object one returns stats chisq.test function example.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"C(alpha) test. — calpha.test","text":"based calculation test statistic, z, asymptotic standard normal distribution null hypothesis. one-sided (way alternative aggregation, just \"non-randomness\"), thus confidence level 95 1.64. sampling units contain total number individuals, n, test statistic calculated : z = (n(N - 1)- Nn)/(2Nn(n - 1))^(1/2) N number sampling units, , Fisher's index aggregation incidence data.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"C(alpha) test. — calpha.test","text":"Neyman J. 1959. Optimal asymptotic tests composite statistical hypotheses. : Probability Statistics, 213-234. Wiley, New York. Tarone RE. 1979. Testing goodness fit binomial distribution. Biometrika, 66(3): 585-590.","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/calpha.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"C(alpha) test. — calpha.test","text":"","code":"# For incidence data: my_incidence <- incidence(tobacco_viruses) my_fisher <- agg_index(my_incidence, method = \"fisher\") calpha.test(my_fisher) #>  #> \tC(alpha) test #>  #> data:  my_fisher #> z = 13.036, p-value < 2.2e-16 #>"},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-squared test. — chisq.test","title":"Chi-squared test. — chisq.test","text":"Performs chi-squared tests Fisher's aggregation indices (computed either count incidence data). another kind data provided, R standard chisq.test function called.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-squared test. — chisq.test","text":"","code":"chisq.test(x, ...)  # S3 method for default chisq.test(x, ...)  # S3 method for fisher chisq.test(x, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-squared test. — chisq.test","text":"x Either output agg_index function method = \"fisher\" parameter, another R object. latter case, stats::chisq.test called. ... arguments passed stats::chisq.test.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chi-squared test. — chisq.test","text":"kind object one returns stats chisq.test function.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chi-squared test. — chisq.test","text":"null hypothesis Fisher's aggregation index (index = 1, .e. random pattern observed), (N - 1)*index follows chi-squared distribution N - 1 degrees freedom. N number sampling units.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chi-squared test. — chisq.test","text":"count incidence data: Madden LV, Hughes G. 1995. Plant disease incidence: Distributions, heterogeneity, temporal analysis. Annual Review Phytopathology 33(1): 529–564. doi:10.1146/annurev.py.33.090195.002525 Patil GP, Stiteler WM. 1973. Concepts aggregation quantification: critical review new results applications. Researches Population Ecology, 15(1): 238-254.","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/chisq.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chi-squared test. — chisq.test","text":"","code":"# For incidence data: my_incidence <- incidence(tobacco_viruses) my_fisher <- agg_index(my_incidence, method = \"fisher\") chisq.test(my_fisher) #>  #> \tChi-squared test for (N - 1)*index following a chi-squared distribution #> \t(df = N - 1) #>  #> data:  my_fisher #> X-squared = 232.65, df = 74, p-value < 2.2e-16 #>"},{"path":"https://chgigot.github.io/epiphy/reference/citrus_ctv.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of citrus tristeza virus (CTV) disease in three fields. — citrus_ctv","title":"Incidence of citrus tristeza virus (CTV) disease in three fields. — citrus_ctv","text":"CTV incidence data three orchards eastern Spain reported consecutive years.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/citrus_ctv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of citrus tristeza virus (CTV) disease in three fields. — citrus_ctv","text":"","code":"citrus_ctv"},{"path":"https://chgigot.github.io/epiphy/reference/citrus_ctv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of citrus tristeza virus (CTV) disease in three fields. — citrus_ctv","text":"three data frames: IVI3and4: data frame 864 rows 5 variables. IVI6and7: data frame 648 rows 5 variables. El_Realengo: data frame 2000 rows 5 variables. structure data frames:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/citrus_ctv.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of citrus tristeza virus (CTV) disease in three fields. — citrus_ctv","text":"Gottwald TR, Cambra M, Moreno P, Camarasa E, Piquer J. 1996. Spatial     temporal analyses citrus tristeza virus eastern Spain.     Phytopathology 86, 45–55. Gibson GJ. 1997. Investigating mechanisms spatiotemporal epidemic     spread using stochastic models. Phytopathology 87, 139-46.     doi:10.1094/PHYTO.1997.87.2.139","code":""},{"path":"https://chgigot.github.io/epiphy/reference/citrus_ctv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incidence of citrus tristeza virus (CTV) disease in three fields. — citrus_ctv","text":"IVI3and4 IVI6and7 orchards consisted 216 trees Washington navel orange Troyer citrange planted 1978 2 x 6-m spacing. El_Realengo orchard consisted 400 Marsh seedless grapefruit Troyer citrange planted 1973 5.5 x 5.5-m spacing.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/clump.html","id":null,"dir":"Reference","previous_headings":"","what":"Regroup observational data into even clumps of individuals. — clump","title":"Regroup observational data into even clumps of individuals. — clump","text":"function provides easy way regroup recorded data groups number individuals.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/clump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regroup observational data into even clumps of individuals. — clump","text":"","code":"clump(object, ...)  # S3 method for intensity clump(object, unit_size, fun = sum, inclusive_unspecified = FALSE, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/clump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regroup observational data into even clumps of individuals. — clump","text":"object intensity object. ... Additional arguments passed fun. unit_size Size group unit. must named vector, names corresponding non-observational variables (.e. space time variables). size variable data set multiple provided value unit_size, sampling units (last ones) dropped clumps individuals remain even throughout data set. fun Function used group observational data together. inclusive_unspecified yet implemented. unspecified mapped variables (different n) need included bigger possible sampling unit (TRUE) splited many sampling units possible (FALSE, default)?","code":""},{"path":"https://chgigot.github.io/epiphy/reference/clump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regroup observational data into even clumps of individuals. — clump","text":"intensity object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/clump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regroup observational data into even clumps of individuals. — clump","text":"","code":"my_incidence <- incidence(tomato_tswv$field_1929) plot(my_incidence, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found    # Different spatial size units: my_incidence_clumped_1 <- clump(my_incidence, unit_size = c(x = 3, y = 3)) plot(my_incidence_clumped_1, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found    my_incidence_clumped_2 <- clump(my_incidence, unit_size = c(x = 4, y = 5)) plot(my_incidence_clumped_2, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found    # To get mean disease incidence for each plant over the 3 scoring dates: my_incidence_clumped_3 <- clump(my_incidence, unit_size = c(t = 3), fun = mean) plot(my_incidence_clumped_3)"},{"path":"https://chgigot.github.io/epiphy/reference/codling_moths.html","id":null,"dir":"Reference","previous_headings":"","what":"Count of codling moth larvae. — codling_moths","title":"Count of codling moth larvae. — codling_moths","text":"Codling moth diapausing larvae collected apple orchard south-eastern France. Larvae caught strip traps wrapped around tree trunks July 2008 collected following October. 30 traps used.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/codling_moths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count of codling moth larvae. — codling_moths","text":"","code":"codling_moths"},{"path":"https://chgigot.github.io/epiphy/reference/codling_moths.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Count of codling moth larvae. — codling_moths","text":"data frame 30 rows 3 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/codling_moths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Count of codling moth larvae. — codling_moths","text":"Lavigne C, Ricci B, Franck P, Senoussi R. 2010. Spatial analyses     ecological count data: density map comparison approach. Basic     Applied Ecology 11: 734-42.     doi:10.1016/j.baae.2010.08.011","code":""},{"path":"https://chgigot.github.io/epiphy/reference/coef.smle.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Coefficients — coef.smle","title":"Extract Model Coefficients — coef.smle","text":"coef generic function extracts model coefficients   objects returned modeling functions.  coefficients   alias .","code":""},{"path":"https://chgigot.github.io/epiphy/reference/coef.smle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Coefficients — coef.smle","text":"","code":"# S3 method for smle coef(object, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/coef.smle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Coefficients — coef.smle","text":"object object extraction model coefficients     meaningful. ... arguments.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/coef.smle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Coefficients — coef.smle","text":"Coefficients extracted model object object. standard model fitting classes named numeric vector.   \"maov\" objects (produced aov) matrix.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/dogwood_anthracnose.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of dogwood anthracnose. — dogwood_anthracnose","title":"Incidence of dogwood anthracnose. — dogwood_anthracnose","text":"Incidence data Dogwood Anthracnose Impact Assessment Program 1990 1991, Southeast USA, reported Zarnoch et al (1995). plots exactly n = 10 dogwood trees present data set (168 161 plots 1990 1991, respectively).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/dogwood_anthracnose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of dogwood anthracnose. — dogwood_anthracnose","text":"","code":"dogwood_anthracnose"},{"path":"https://chgigot.github.io/epiphy/reference/dogwood_anthracnose.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of dogwood anthracnose. — dogwood_anthracnose","text":"data frame 329 rows 3 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/dogwood_anthracnose.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of dogwood anthracnose. — dogwood_anthracnose","text":"Zarnoch SJ, Anderson RL, Sheffield RM. 1995. Using \\(\\beta\\)-binomial     distribution characterize forest health. Canadian journal forest     research 25, 462–469.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/epiphy.html","id":null,"dir":"Reference","previous_headings":"","what":"epiphy: An R package to analyze plant disease epidemics. — epiphy","title":"epiphy: An R package to analyze plant disease epidemics. — epiphy","text":"epiphy makes easy analyze plant disease epidemics. provides common framework plant disease intensity data recorded time /space. Implemented statistical methods currently mainly focused spatial pattern analysis (e.g., aggregation indices, Taylor binary power laws, distribution fitting, SADIE mapcomp methods). Several data sets mainly published plant disease epidemiology literature also included package","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/epiphy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epiphy: An R package to analyze plant disease epidemics. — epiphy","text":"Maintainer: Christophe Gigot ch.gigot@gmail.com","code":""},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"Different distributions may used depending kind provided data. default, Poisson negative binomial distributions fitted count data, whereas binomial beta-binomial distributions used incidence data. Either Randomness assumption (Poisson binomial distributions) aggregation assumption (negative binomial beta-binomial) made, , goodness--fit comparison distributions made using log-likelihood ratio test.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"","code":"fit_two_distr(data, ...)  # S3 method for default fit_two_distr(data, random, aggregated, ...)  # S3 method for count fit_two_distr(   data,   random = smle_pois,   aggregated = smle_nbinom,   n_est = c(random = 1, aggregated = 2),   ... )  # S3 method for incidence fit_two_distr(   data,   random = smle_binom,   aggregated = smle_betabinom,   n_est = c(random = 1, aggregated = 2),   ... )"},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"data intensity object. ... Additional arguments passed methods. random Distribution describe random patterns. aggregated Distribution describe aggregated patterns. n_est Number estimated parameters distributions.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"object class fit_two_distr, list containing least following components: components can present :","code":""},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"hood, distr_fit relies smle utility wrapped around optim procedure. Note may appear warnings chi-squared goodness--fit tests expected count less 5 (Cochran's rule thumb).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"Madden LV, Hughes G. 1995. Plant disease incidence: Distributions, heterogeneity, temporal analysis. Annual Review Phytopathology 33(1): 529–564. doi:10.1146/annurev.py.33.090195.002525","code":""},{"path":"https://chgigot.github.io/epiphy/reference/fit_two_distr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likelihood fitting of two distributions and goodness-of-fit\ncomparison. — fit_two_distr","text":"","code":"# Simple workflow for incidence data: my_data <- count(arthropods) my_data <- split(my_data, by = \"t\")[[3]] my_res  <- fit_two_distr(my_data) #> Warning: Chi-squared approximation may be incorrect. #> Warning: Chi-squared approximation may be incorrect. summary(my_res) #> Fitting of two distributions by maximum likelihood #> for 'count' data. #> Parameter estimates: #>  #> (1) Poisson (random): #>        Estimate  Std.Err Z value    Pr(>z)     #> lambda 11.68254  0.43062  27.129 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (2) Negative binomial (aggregated): #>       Estimate   Std.Err Z value    Pr(>z)     #> k     3.308038  0.742318  4.4564 8.336e-06 *** #> mu   11.682540  0.916690 12.7443 < 2.2e-16 *** #> prob  0.220675  0.040883  5.3977 6.748e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 plot(my_res)   # Simple workflow for incidence data: my_data <- incidence(tobacco_viruses) my_res  <- fit_two_distr(my_data) #> Warning: Chi-squared approximation may be incorrect. #> Warning: Chi-squared approximation may be incorrect. summary(my_res) #> Fitting of two distributions by maximum likelihood #> for 'incidence' data. #> Parameter estimates: #>  #> (1) Binomial (random): #>       Estimate   Std.Err Z value    Pr(>z)     #> prob 0.1556667 0.0066188  23.519 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (2) Beta-binomial (aggregated): #>        Estimate   Std.Err Z value    Pr(>z)     #> alpha  3.211182  0.785169  4.0898 4.317e-05 *** #> beta  17.333526  4.419297  3.9222 8.773e-05 *** #> prob   0.156302  0.011120 14.0560 < 2.2e-16 *** #> rho    0.046415  0.011131  4.1698 3.049e-05 *** #> theta  0.048674  0.012241  3.9762 7.002e-05 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 plot(my_res)   # Note that there are other methods to fit some common distributions. # For example for the Poisson distribution, one can use glm: my_arthropods <- arthropods[arthropods$t == 3, ] my_model <- glm(my_arthropods$i ~ 1, family = poisson) lambda <- exp(coef(my_model)[[1]]) # unique(my_model$fitted.values) works also. lambda #> [1] 11.68254 # ... or the fitdistr function in MASS package: require(MASS) #> Loading required package: MASS fitdistr(my_arthropods$i, \"poisson\") #>      lambda   #>   11.6825397  #>  ( 0.4306241)  # For the binomial distribution, glm still works: my_model <- with(tobacco_viruses, glm(i/n ~ 1, family = binomial, weights = n)) prob <- logit(coef(my_model)[[1]], rev = TRUE) prob #> [1] 0.1556667 # ... but the binomial distribution is not yet recognized by MASS::fitdistr.  # Examples featured in Madden et al. (2007). # p. 242-243 my_data <- incidence(dogwood_anthracnose) my_data <- split(my_data, by = \"t\") my_fit_two_distr <- lapply(my_data, fit_two_distr) #> Warning: Chi-squared approximation may be incorrect. #> Warning: Chi-squared approximation may be incorrect. #> Warning: Chi-squared approximation may be incorrect. lapply(my_fit_two_distr, function(x) x$param$aggregated[c(\"prob\", \"theta\"), ]) #> $`1990` #>        Estimate    Std.Err  Z value       Pr(>z) #> prob  0.1526829 0.01741013 8.769772 1.790281e-18 #> theta 0.5222174 0.09437075 5.533679 3.135830e-08 #>  #> $`1991` #>        Estimate   Std.Err   Z value       Pr(>z) #> prob  0.2985848 0.0258905 11.532600 9.037225e-31 #> theta 0.9978690 0.1404673  7.103922 1.212655e-12 #>  lapply(my_fit_two_distr, plot)   #> $`1990` #> NULL #>  #> $`1991` #> NULL #>   my_agg_index <- lapply(my_data, agg_index) lapply(my_agg_index, function(x) x$index) #> $`1990` #> [1] 3.848373 #>  #> $`1991` #> [1] 5.596382 #>  lapply(my_agg_index, chisq.test) #> $`1990` #>  #> \tChi-squared test for (N - 1)*index following a chi-squared distribution #> \t(df = N - 1) #>  #> data:  X[[i]] #> X-squared = 642.68, df = 167, p-value < 2.2e-16 #>  #>  #> $`1991` #>  #> \tChi-squared test for (N - 1)*index following a chi-squared distribution #> \t(df = N - 1) #>  #> data:  X[[i]] #> X-squared = 895.42, df = 160, p-value < 2.2e-16 #>  #>"},{"path":"https://chgigot.github.io/epiphy/reference/hop_viruses.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of three viruses in an Australian hop garden. — hop_viruses","title":"Incidence of three viruses in an Australian hop garden. — hop_viruses","text":"Three viruses, .e. Hop latent virus (HpLV), Hop mosaic virus (HpMV), Apple mosaic virus (ApMV), monitored Australian hop garden two consecutive years (1996 1997). hop garden established 1989 variety Victoria commercial hop farm Bushy Park, Tasmania, Australia. consisted 25 rows containing 51 plants , 1275 hop plants total. 2.1 m rows, 1.8 m plants within rows.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/hop_viruses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of three viruses in an Australian hop garden. — hop_viruses","text":"","code":"hop_viruses"},{"path":"https://chgigot.github.io/epiphy/reference/hop_viruses.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of three viruses in an Australian hop garden. — hop_viruses","text":"three data frames, one virus (HpLV, HpMV ApMV). data frame consists 2550 rows 7 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/hop_viruses.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of three viruses in an Australian hop garden. — hop_viruses","text":"Pethybridge SJ, Madden LV. 2003. Analysis spatiotemporal dynamics     virus spread Australian hop garden stochastic modeling. Plant     Disease 87:56-62.     doi:10.1094/PDIS.2003.87.1.56","code":""},{"path":"https://chgigot.github.io/epiphy/reference/indAndSub.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve vector or array indices — indAndSub","title":"Retrieve vector or array indices — indAndSub","text":"ind2sub just alias arrayInd. sub2ind reverse ind2sub.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/indAndSub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve vector or array indices — indAndSub","text":"","code":"ind2sub(ind, .dim, .dimnames = NULL, useNames = FALSE)  sub2ind(sub, .dim)"},{"path":"https://chgigot.github.io/epiphy/reference/indAndSub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve vector or array indices — indAndSub","text":"ind Vector indices. .dim dim(.) integer vector .dimnames optional list character dimnames(.).    useNames true, used constructing dimnames    arrayInd() (hence, (*, arr.ind=TRUE)).    names(.dimnames) empty, used    column names.  .dimnames[[1]] used row names. useNames logical indicating value arrayInd()    (non-null) dimnames . sub Array/matrix indices.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/indAndSub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve vector or array indices — indAndSub","text":"See arrayInd.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/indAndSub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve vector or array indices — indAndSub","text":"","code":"set.seed(12345) mat <- matrix(round(runif(6, min = 0, max = 10)), nrow = 2, ncol = 3) ind2sub(4, dim(mat)) #>      [,1] [,2] #> [1,]    2    2 sub2ind(c(2, 2), dim(mat)) #> [1] 4 subs <- as.matrix(expand.grid(1:2,2:3)) sub2ind(subs, dim(mat)) #> [1] 3 4 5 6"},{"path":"https://chgigot.github.io/epiphy/reference/intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct count, incidence and severity objects. — intensity","title":"Construct count, incidence and severity objects. — intensity","text":"count(), incidence() severity() create eponym objects. classes inherit base class intensity. choice class depends nature data set.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct count, incidence and severity objects. — intensity","text":"","code":"count(data, mapping, keep_only_std = TRUE)  incidence(data, mapping, keep_only_std = TRUE)  severity(data, mapping, keep_only_std = TRUE)"},{"path":"https://chgigot.github.io/epiphy/reference/intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct count, incidence and severity objects. — intensity","text":"data data frame. line corresponds record (case, entry). mapping mapping object, created mapping()   mapping_() functions. ... vector corresponding variables. different elements can named (names elements) data frame incidence object), unamed. latter case, elements must correctly ordered, .e. x, y, z, t, r n. variables NULL, 6 first ... take account following (1, 2, ...), .e. id value. 'parameters' need specified. keep_only_std standard names kept proceeding mapping? Setting keep_only_std TRUE may useful subsequent data splitting using extra labels.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct count, incidence and severity objects. — intensity","text":"intensity object. printed, difference information available: number sampling units. time. georeferenced (TRUE/FALSE) NA data (TRUE/FALSE) complet array (TRUE/FALSE)? complete array means recorded values allow     display array (even data available), explicitelly specified.     complete dataset, just use complete(data). can also remove NA, necessary use     analysis technics, using replaceNA(data) replace.na(data). Note using     commands results modifying original data sets specified.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/intensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct count, incidence and severity objects. — intensity","text":"incidence reads disease incidence data data frame return incidence object. classes inherit intensity class. count: sampling unit contains 0 theoreticaly infinity data.     Number positive integers. incidence: sampling unit contains number diseased plants,     ranging 0 n total amount plants per sampling     unit. severity: sampling unit contain percentage disease, positive     real number ranging 0.0 1.0. Class intensity inherited classes classes recording disease intensity measurements inherit class. class intensity virtual means object class intensity can constructed. class describes common features different disease intensity measurements implemented package (count, incidence severity). call one inherited classes instead, depending nature data. convention, first columns different data frames slots names, spatial, temporal even disease information need fit conventions may less straightforward need columns record correctly information. unusual situations, automatic options analysis tools need overridden able work desired way. differences different inherited classes regard obs slot. case count, data expected record positive integers (N+). incidence, data sets supposed two information set per records, number diseased unit per sampling unit (r) total number units per sampling unit (n). Note current implementation, n supposed whole data set. Unequal sampling units implemented yet. Finally, severity, r positive real ranging 0 1 depecting percentage. space data frame containing spatial information. row   corresponds sampling unit. convention, first 3 columns   names x, y, z. time data frame containing temporal information. convention,   first column named t. obs data frame containing disease observations . name   columns may differ sub-class chosed record data. Note possible create \"severity\" object statistical tools currently implemented deal object. intensity object contains least \"pure\" intensity records (column r) -called observational variable. Another observational variable, number individuals sampling unit (n), present case incidence object. often addition observational variables, spatial (columns x, y /z) /temporal (column t) variables. Note severity class z variable (3rd spatial dimension) implemented statistical methods use point.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct count, incidence and severity objects. — intensity","text":"","code":"## Create intensity objects # Implicite call: The variable mapping does not need to be specified if the # column names of the input data frame follow the default names. colnames(tomato_tswv$field_1929) # Returns c(\"x\", \"y\", \"t\", \"i\", \"n\") #> [1] \"x\" \"y\" \"t\" \"i\" \"n\" my_incidence_1 <- incidence(tomato_tswv$field_1929) my_incidence_1 #> # A mapped object: incidence class #> # dim: 2 space, 1 time, 2 obs #>   [x] [y] [t] [i] [n] #>     x   y   t   i   n #> 1   1   1   1   0   1 #> 2   1   2   1   1   1 #> 3   1   3   1   0   1 #> 4   1   4   1   1   1 #> 5   1   5   1   0   1 #> 6   1   6   1   0   1 #> # ... with 4314 more records (rows) my_incidence_2 <- incidence(tomato_tswv$field_1929,                             mapping(x = x, y = y, t = t, i = i, n = n)) identical(my_incidence_1, my_incidence_2) #> [1] TRUE  # Explicite call: Otherwise, the variable mapping need to be specified, at # least for column names that do not correspond to default names. colnames(aphids) # Returns c(\"xm\", \"ym\", \"i\") #> [1] \"x\"  \"y\"  \"xm\" \"ym\" \"i\"  my_count_1 <- count(aphids, mapping(x = xm, y = ym, i = i)) my_count_1 #> # A mapped object: count class #> # dim: 2 space, 0 time, 1 obs #>   . . [x] [y] [i] #>   x y  xm  ym   i #> 1 1 1   0   0   0 #> 2 2 1  30   0   0 #> 3 3 1  60   0   3 #> 4 4 1  90   0   7 #> 5 5 1 120   0   9 #> 6 6 1 150   0   1 #> # ... with 57 more records (rows) # We can drop the \"i = i\" in the mapping. my_count_2 <- count(aphids, mapping(x = xm, y = ym)) identical(my_count_1, my_count_2) #> [1] FALSE  # It is possible to change the variable mapping after the creation of an # intensity object: another_incidence <- incidence(hop_viruses$HpLV) another_incidence #> # A mapped object: incidence class #> # dim: 2 space, 1 time, 2 obs #>   [x] [y]  .   .  [t] [i] [n] #>     x   y xm  ym    t   i   n #> 1   1   1  0   0 1996   1   1 #> 2   1   2  0 1.8 1996   0   1 #> 3   1   3  0 3.6 1996   0   1 #> 4   1   4  0 5.4 1996   0   1 #> 5   1   5  0 7.2 1996   0   1 #> 6   1   6  0   9 1996   0   1 #> # ... with 2544 more records (rows) remap(another_incidence, mapping(x = xm, y = ym)) #> # A mapped object: incidence class #> # dim: 2 space, 1 time, 2 obs #>   . . [x] [y]  [t] [i] [n] #>   x y  xm  ym    t   i   n #> 1 1 1   0   0 1996   1   1 #> 2 1 2   0 1.8 1996   0   1 #> 3 1 3   0 3.6 1996   0   1 #> 4 1 4   0 5.4 1996   0   1 #> 5 1 5   0 7.2 1996   0   1 #> 6 1 6   0   9 1996   0   1 #> # ... with 2544 more records (rows)  ## Plotting data plot(my_incidence_1) # Same as: plot(my_incidence_1, type = \"spatial\")  plot(my_incidence_1, type = \"temporal\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found   plot(my_count_1, tile = FALSE, size = 5)  plot(my_count_1, type = \"temporal\") # Not possible: there is only 1 date.  # Using grayscale: plot(my_count_1, grayscale = TRUE)  plot(my_count_1, grayscale = TRUE, tile = FALSE, size = 5)"},{"path":"https://chgigot.github.io/epiphy/reference/is.intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is of class intensity or one of its subclasses. — is.intensity","title":"Test if an object is of class intensity or one of its subclasses. — is.intensity","text":"Test object class intensity one subclasses (.e. count, incidence severity).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/is.intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is of class intensity or one of its subclasses. — is.intensity","text":"","code":"is.intensity(x)  is.count(x)  is.incidence(x)  is.severity(x)"},{"path":"https://chgigot.github.io/epiphy/reference/is.intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is of class intensity or one of its subclasses. — is.intensity","text":"x object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/is.intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is of class intensity or one of its subclasses. — is.intensity","text":"TRUE argument's value corresponding intensity object FALSE otherwise.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/link.html","id":null,"dir":"Reference","previous_headings":"","what":"Some link functions. — link","title":"Some link functions. — link","text":"Logit, probit cloglog functions available. logit logistic (rev = TRUE), .e. inverse-logit functions. Probit wrapper around qnorm (\\(probit\\)) pnorm (\\(probit^{-1}\\)) Complementary log-log transformation.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some link functions. — link","text":"","code":"logit(x, rev = FALSE)  probit(x, rev = FALSE)  cloglog(x, rev = FALSE)"},{"path":"https://chgigot.github.io/epiphy/reference/link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Some link functions. — link","text":"x numeric vector. rev inverse function?","code":""},{"path":"https://chgigot.github.io/epiphy/reference/link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Some link functions. — link","text":"numeric vector.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/logLik.smle.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract log-likelihood — logLik.smle","title":"Extract log-likelihood — logLik.smle","text":"function returns maximal log-likelihood estimated smle, f returned log-likelihood value.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/logLik.smle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract log-likelihood — logLik.smle","text":"","code":"# S3 method for smle logLik(object, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/logLik.smle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract log-likelihood — logLik.smle","text":"object object log-likelihood value,    contribution log-likelihood value, can extracted. ... methods generic function require additional    arguments.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/logLik.smle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract log-likelihood — logLik.smle","text":"Returns object class logLik.  number   least one attribute, \"df\" (degrees freedom),   giving number (estimated) parameters model. simple print method \"logLik\" objects. may attributes depending method used: see   appropriate documentation.  One used several methods  \"nobs\", number observations used estimation (  restrictions REML = TRUE).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Comparison procedure. — mapcomp","title":"Map Comparison procedure. — mapcomp","text":"mapcomp performs spatial pattern analysis based calculation formal distance (Hellinger distance) density map count incidence data, density map sampling effort. Statistical tests spatial homogeneity based permutations across sampling sites valuable properties Hellinger distance.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Comparison procedure. — mapcomp","text":"","code":"mapcomp(data, ...)  # S3 method for data.frame mapcomp(   data,   delta,   bandwidth,   nperm = 100,   edge_correction = FALSE,   threads = 1,   verbose = TRUE,   ... )  # S3 method for matrix mapcomp(   data,   delta,   bandwidth,   nperm = 100,   edge_correction = FALSE,   threads = 1,   verbose = TRUE,   ... )  # S3 method for count mapcomp(   data,   delta,   bandwidth,   nperm = 100,   edge_correction = FALSE,   threads = 1,   verbose = TRUE,   ... )  # S3 method for incidence mapcomp(   data,   delta,   bandwidth,   nperm = 100,   edge_correction = FALSE,   threads = 1,   verbose = TRUE,   ... )"},{"path":"https://chgigot.github.io/epiphy/reference/mapcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Comparison procedure. — mapcomp","text":"data data frame matrix three columns: two first ones must x y coordinates sampling units, last one, corresponding disease intensity observations. can also count incidence object. ... Additional arguments passed methods. delta Mesh size grid geographical domain sampling units used compute integral Hellinger distance probability density function observations probability density function sampling effort. bandwidth Bandwidth parameter smoothing. allows test spatial extent heterogeneity . nperm Number random permutations assess probabilities. edge_correction Apply edge correction account fact bordering points intrinsically suffer lack neighboring observation sites. FALSE default. threads Number threads perform computations. verbose Explain done (TRUE default).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Comparison procedure. — mapcomp","text":"object class mapcomp, list containing following components:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapcomp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Map Comparison procedure. — mapcomp","text":"Lavigne C, Ricci B, Franck P, Senoussi R. 2010. Spatial analyses ecological count data: density map comparison approach. Basic Applied Ecology. 11:734–742.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Comparison procedure. — mapcomp","text":"","code":"set.seed(123) my_res <- mapcomp(codling_moths, delta = 1, bandwidth = 11,                   edge_correction = FALSE, nperm = 20) my_res #> Map Comparison analysis (mapcomp) #>  #> Call: #> mapcomp.data.frame(data = codling_moths, delta = 1, bandwidth = 11,  #>     nperm = 20, edge_correction = FALSE) #>  #> Stat: 0.3423 (P = 0.047619) #>  plot(my_res)   set.seed(123) my_count <- count(codling_moths, mapping(x = xm, y = ym)) my_res <- mapcomp(my_count, delta = 1, bandwidth = 11,                   edge_correction = FALSE, nperm = 20) my_res #> Map Comparison analysis (mapcomp) #>  #> Call: #> mapcomp.count(data = my_count, delta = 1, bandwidth = 11, nperm = 20,  #>     edge_correction = FALSE) #>  #> Stat: 0.3423 (P = 0.047619) #>  plot(my_res, bins = 10)"},{"path":"https://chgigot.github.io/epiphy/reference/mapped_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Existing variable mappings. — mapped_var","title":"Existing variable mappings. — mapped_var","text":"Get set existing variable mappings.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapped_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Existing variable mappings. — mapped_var","text":"","code":"mapped_var(x)  mapped_var(x, keep = TRUE) <- value"},{"path":"https://chgigot.github.io/epiphy/reference/mapped_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Existing variable mappings. — mapped_var","text":"x intensity object. keep Logical. keep previous mapped variables redifined mapping object? value mapping object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapped_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Existing variable mappings. — mapped_var","text":"mapped_var returns list current mapped names object x.","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/mapped_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Existing variable mappings. — mapped_var","text":"","code":"my_data <- count(aphids) my_data #> # A mapped object: count class #> # dim: 2 space, 0 time, 1 obs #>   [x] [y]   .  . [i] #>     x   y  xm ym   i #> 1   1   1   0  0   0 #> 2   2   1  30  0   0 #> 3   3   1  60  0   3 #> 4   4   1  90  0   7 #> 5   5   1 120  0   9 #> 6   6   1 150  0   1 #> # ... with 57 more records (rows) mapped_var(my_data) #> * i -> i #> * x -> x #> * y -> y mapped_var(my_data) <- mapping(x = X, y = Y) mapped_var(my_data) #> * i -> i #> * x -> X #> * y -> Y mapped_var(my_data) <- mapping(x = x, r = r, keep = FALSE) mapped_var(my_data) #> * i -> i #> * y -> Y #> * keep -> FALSE #> * r -> r #> * x -> x"},{"path":"https://chgigot.github.io/epiphy/reference/mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct data mappings. — mapping","title":"Construct data mappings. — mapping","text":"Data mappings describe variables data mapped standard names used throughout epiphy.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct data mappings. — mapping","text":"","code":"mapping(...)  mapping_(x)  remap(data, mapping, keep_only_std = TRUE)"},{"path":"https://chgigot.github.io/epiphy/reference/mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct data mappings. — mapping","text":"... One unquoted expressions separated commas. x Vector one character strings. data intensity object. mapping mapping object. keep_only_std Keep standard variables.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct data mappings. — mapping","text":"list mapped names.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct data mappings. — mapping","text":"Standard names x, y z three spatial dimensions, t time. r corresponds records (disease) intensity, n, number individuals sampling unit (applicable). mapping() works expressions, mapping_(), vector characters.","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct data mappings. — mapping","text":"","code":"mapping(x = col1, y = col2) #> * x -> col1 #> * y -> col2 mapping_(c(\"x = col1\", \"y = col2\")) #> * x -> col1 #> * y -> col2"},{"path":"https://chgigot.github.io/epiphy/reference/offspring_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Offspring survival of rats experiencing different diets. — offspring_survival","title":"Offspring survival of rats experiencing different diets. — offspring_survival","text":"Results experiment two groups 16 female rats fed different diets pregnancy lactation periods. One group's diet contained chemical review, one control. litter, number pups alive 4 days, number pups weaned (.e. survived 21-day lactation period) recorded.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/offspring_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Offspring survival of rats experiencing different diets. — offspring_survival","text":"","code":"offspring_survival"},{"path":"https://chgigot.github.io/epiphy/reference/offspring_survival.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Offspring survival of rats experiencing different diets. — offspring_survival","text":"data frame 32 rows 3 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/offspring_survival.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Offspring survival of rats experiencing different diets. — offspring_survival","text":"Weil CS. 1970. Selection valid number sampling units     consideration combination toxicological studies involving     reproduction, teratogenesis carcinogenesis. Food Cosmetics     Toxicology 8: 177-182.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/onion_bacterial_blight.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of bacterial blight of onion. — onion_bacterial_blight","title":"Incidence of bacterial blight of onion. — onion_bacterial_blight","text":"Assessments bacterial blight onion two dates. experimental plot sown naturally X. axonopodis pv. allii-contaminated onion (. cepa L. cv. Chateau-vieux) seed lot, contamination rate 0.04%.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/onion_bacterial_blight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of bacterial blight of onion. — onion_bacterial_blight","text":"","code":"onion_bacterial_blight"},{"path":"https://chgigot.github.io/epiphy/reference/onion_bacterial_blight.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of bacterial blight of onion. — onion_bacterial_blight","text":"data frame 1134 rows 5 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/onion_bacterial_blight.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of bacterial blight of onion. — onion_bacterial_blight","text":"Roumagnac P, Pruvost O, Chiroleu F, Hughes G. 2004. Spatial     temporal analyses bacterial blight onion caused Xanthomonas     axonopodis pv. allii. Phytopathology 94, 138–146.     doi:10.1094/PHYTO.2004.94.2.138","code":""},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":null,"dir":"Reference","previous_headings":"","what":"Taylor's and binary power laws. — power_law","title":"Taylor's and binary power laws. — power_law","text":"Assesses overall degree heterogeneity collection data sets sampling-unit scale.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taylor's and binary power laws. — power_law","text":"","code":"power_law(data, log_base = exp(1), ...)"},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taylor's and binary power laws. — power_law","text":"data list intensity objects (count incidence objects). log_base Logarithm base used. ... Additional arguments passed methods.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taylor's and binary power laws. — power_law","text":"power_law object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taylor's and binary power laws. — power_law","text":"power law describes relationship observed variance individuals within data set (s^2) corresponding variance assumption aggregation (s\\'^2). can expressed logarithmic form : log(s^2) = log() + b log(Y), : Y = p case count data (Taylor's power law). Y = p(1 - p) case incidence data (binary power law). p corresponds mean proportion recorded individuals case incidence data, absolute value case count data.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taylor's and binary power laws. — power_law","text":"Taylor LR. 1961. Aggregation, variance mean. Nature 189: 732–35. Hughes G, Madden LV. 1992. Aggregation incidence disease. Plant Pathology 41 (6): 657–660. doi:10.1111/j.1365-3059.1992.tb02549.x Madden LV, Hughes G, van den Bosch F. 2007. Spatial aspects epidemics - III: Patterns plant disease. : study plant disease epidemics, 235–278. American Phytopathological Society, St Paul, MN.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/power_law.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taylor's and binary power laws. — power_law","text":"","code":"require(magrittr) my_data <- do.call(c, lapply(citrus_ctv, function(citrus_field) {    incidence(citrus_field) %>%        clump(unit_size = c(x = 3, y = 3)) %>%        split(by = \"t\") })) #> Warning: To get even clumps of individuals, a total of 380 source sampling units were dropped. # my_data is a list of incidence object, each one corresponding to a given # time at a given location. my_power_law <- power_law(my_data) #> Warning: Missing cases were dropped. #> Warning: Missing cases were dropped. #> Warning: Missing cases were dropped. #> Warning: Missing cases were dropped. my_power_law #> Binary Power Law: #> Power law analysis for 'incidence' data. #>  #> Coefficients: #> (Intercept)      log(x)  #>    3.653887    1.935628  #>  summary(my_power_law) #>  #> Call: #> power_law(data = my_data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.56432 -0.15156  0.00996  0.16278  0.57520  #>  #> Coefficients: #>                           Estimate Std. Error t value Pr(>|t|)    #> (Intercept): log_base(Ar)   3.6539     2.1491   1.700  0.11993    #> log(x): b                   1.9356     0.5701   3.395  0.00683 ** #> Ai                         38.6245    83.0079   0.465  0.65168    #> ai                          0.5493     0.4940   1.112  0.29216    #> AI                          0.6327     0.2344   2.700  0.02233 *  #> aI                         44.4927    40.0118   1.112  0.29216    #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3255 on 10 degrees of freedom #> Multiple R-squared:  0.5355,\tAdjusted R-squared:  0.489  #> F-statistic: 11.53 on 1 and 10 DF,  p-value: 0.006827 #>  plot(my_power_law) # Same as: plot(my_power_law, scale = \"log\")  plot(my_power_law, scale = \"lin\")"},{"path":"https://chgigot.github.io/epiphy/reference/pyrethrum_ray_blight.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of ray blight disease of pyrethrum. — pyrethrum_ray_blight","title":"Incidence of ray blight disease of pyrethrum. — pyrethrum_ray_blight","text":"assessment incidence ray blight disease pyrethrum 62 sampling units, containing 6 plants .","code":""},{"path":"https://chgigot.github.io/epiphy/reference/pyrethrum_ray_blight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of ray blight disease of pyrethrum. — pyrethrum_ray_blight","text":"","code":"pyrethrum_ray_blight"},{"path":"https://chgigot.github.io/epiphy/reference/pyrethrum_ray_blight.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of ray blight disease of pyrethrum. — pyrethrum_ray_blight","text":"data frame 62 rows 2 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/pyrethrum_ray_blight.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of ray blight disease of pyrethrum. — pyrethrum_ray_blight","text":"Pethybridge SJ, Esker P, Hay F, Wilson C, Nutter FW. 2005.     Spatiotemporal description epidemics caused Phoma ligulicola     Tasmanian pyrethrum fields. Phytopathology 95, 648–658.     doi:10.1094/PHYTO-95-0648","code":""},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"sadie performs SADIE procedure. computes different indices probabilities based distance regularity observed spatial pattern specified number random permutations pattern. kind clustering indices described Perry et al. (1999) Li et al. (2012) can computed.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"","code":"sadie(data, ...)  # S3 method for data.frame sadie(   data,   index = c(\"Perry\", \"Li-Madden-Xu\", \"all\"),   nperm = 100,   seed = NULL,   threads = 1,   ...,   method = \"shortsimplex\",   verbose = TRUE )  # S3 method for matrix sadie(   data,   index = c(\"Perry\", \"Li-Madden-Xu\", \"all\"),   nperm = 100,   seed = NULL,   threads = 1,   ...,   method = \"shortsimplex\",   verbose = TRUE )  # S3 method for count sadie(   data,   index = c(\"Perry\", \"Li-Madden-Xu\", \"all\"),   nperm = 100,   seed = NULL,   threads = 1,   ...,   method = \"shortsimplex\",   verbose = TRUE )  # S3 method for incidence sadie(   data,   index = c(\"Perry\", \"Li-Madden-Xu\", \"all\"),   nperm = 100,   seed = NULL,   threads = 1,   ...,   method = \"shortsimplex\",   verbose = TRUE )"},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"data data frame matrix three columns: two first ones must x y coordinates sampling units, last one, corresponding disease intensity observations. can also count incidence object. ... Additional arguments passed methods. index index calculated: \"Perry\", \"Li-Madden-Xu\" \"\". default, Perry's index computed sampling unit. nperm Number random permutations assess probabilities. seed Fixed seed used randomizations (useful checking purposes). fixed default (= NULL). threads Number threads perform computations. method Method transportation algorithm. verbose Explain done (TRUE default).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"sadie object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"convention SADIE procedure, clustering indices donor unit (outflow) receiver unit (inflow) positive negative sign, respectively.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"Perry JN. 1995. Spatial analysis distance indices. Journal Animal Ecology 64, 303–314. doi:10.2307/5892 Perry JN, Winder L, Holland JM, Alston RD. 1999. Red–blue plots detecting clusters count data. Ecology Letters 2, 106–113. doi:10.1046/j.1461-0248.1999.22057.x Li B, Madden LV, Xu X. 2012. Spatial analysis distance indices: alternative local clustering index studying spatial patterns. Methods Ecology Evolution 3, 368–377. doi:10.1111/j.2041-210X.2011.00165.x","code":""},{"path":"https://chgigot.github.io/epiphy/reference/sadie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Analysis by Distance IndicEs (SADIE). — sadie","text":"","code":"set.seed(123) # Create an intensity object: my_count <- count(aphids, mapping(x = xm, y = ym)) # Only compute Perry's indices: my_res <- sadie(my_count) #> Computation of Perry's indices: my_res #> Spatial Analysis by Distance IndicEs (sadie) #>  #> Call: #> sadie.count(data = my_count) #>  #> Ia: 1.2569 (Pa = 0.06) #>  summary(my_res) #>  #> Call: #> sadie.count(data = my_count) #>  #> First 6 rows of clustering indices: #>     x y i cost_flows      idx_P idx_LMX prob #> 1   0 0 0 -148.09142 -2.2522651      NA   NA #> 2  30 0 0  -91.27589 -1.5275799      NA   NA #> 3  60 0 3 -108.16654 -2.1907077      NA   NA #> 4  90 0 7  -40.99681 -0.6336085      NA   NA #> 5 120 0 9   30.00000  0.7628231      NA   NA #> 6 150 0 1  -42.31033 -0.7946351      NA   NA #>  #> Summary indices: #>                       overall    inflow  outflow #> Perry's index        1.309858 -1.458153 1.119927 #> Li-Madden-Xu's index       NA        NA       NA #>  #> Main outputs: #> Ia: 1.2569 (Pa = 0.06) #>  #> 'Total cost': 1061.153 #> Number of permutations: 100 #>  plot(my_res)  plot(my_res, isoclines = TRUE)   set.seed(123) # Compute both Perry's and Li-Madden-Xu's indices (using multithreading): my_res <- sadie(my_count, index = \"all\", threads = 2, nperm = 20) #> Computation of Perry's indices: #> Computation of Li-Madden-Xu's indices: my_res #> Spatial Analysis by Distance IndicEs (sadie) #>  #> Call: #> sadie.count(data = my_count, index = \"all\", nperm = 20, threads = 2) #>  #> Ia: 1.3517 (Pa = 0.05) #>  summary(my_res) #>  #> Call: #> sadie.count(data = my_count, index = \"all\", nperm = 20, threads = 2) #>  #> First 6 rows of clustering indices: #>     x y i cost_flows      idx_P    idx_LMX       prob #> 1   0 0 0 -148.09142 -2.0856425 -3.0083225 0.04761905 #> 2  30 0 0  -91.27589 -1.5994304 -1.5545829 0.23809524 #> 3  60 0 3 -108.16654 -1.9837172 -1.9703605 0.14285714 #> 4  90 0 7  -40.99681 -0.7734811 -0.7590137 0.66666667 #> 5 120 0 9   30.00000  0.8051948  0.8750000 0.09523810 #> 6 150 0 1  -42.31033 -0.8651327 -0.8268594 0.57142857 #>  #> Summary indices: #>                       overall    inflow  outflow #> Perry's index        1.385343 -1.558203 1.149058 #> Li-Madden-Xu's index 1.317835 -1.431426 1.205459 #>  #> Main outputs: #> Ia: 1.3517 (Pa = 0.05) #>  #> 'Total cost': 1061.153 #> Number of permutations: 20 #>  plot(my_res) # Identical to: plot(my_res, index = \"Perry\")  plot(my_res, index = \"Li-Madden-Xu\")   set.seed(123) # Using usual data frames instead of intensity objects: my_df <- aphids[, c(\"xm\", \"ym\", \"i\")] sadie(my_df) #> Computation of Perry's indices: #> Spatial Analysis by Distance IndicEs (sadie) #>  #> Call: #> sadie.data.frame(data = my_df) #>  #> Ia: 1.2569 (Pa = 0.06) #>"},{"path":"https://chgigot.github.io/epiphy/reference/simulated_epidemics.html","id":null,"dir":"Reference","previous_headings":"","what":"Examples of simulated epidemic data. — simulated_epidemics","title":"Examples of simulated epidemic data. — simulated_epidemics","text":"Epidemics generated using stochastic simulator Xu Madden (2004). data consist numbers diseased plants per sampling unit (total n = 100 plants sampling unit). N = 144 sampling units, different values parameters pattern mu used simulations.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/simulated_epidemics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Examples of simulated epidemic data. — simulated_epidemics","text":"","code":"simulated_epidemics"},{"path":"https://chgigot.github.io/epiphy/reference/simulated_epidemics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Examples of simulated epidemic data. — simulated_epidemics","text":"data frame 864 rows 6 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/simulated_epidemics.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Examples of simulated epidemic data. — simulated_epidemics","text":"Xu XM, Madden LV. 2004. Use SADIE statistics study spatial   dynamics plant disease epidemics. Plant Pathology 53, 38–49.   doi:10.1111/j.1365-3059.2004.00949.x","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple maximum likelihood estimation — smle","title":"Simple maximum likelihood estimation — smle","text":"default, function performs maximum likelihood estimation one several parameters, can used optimization problems. interface intented rather simple allowing advanced parametrizations.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple maximum likelihood estimation — smle","text":"","code":"smle(data, ...)  # S3 method for default smle(data, f, param_init, max = TRUE, ...)  # S3 method for intensity smle(data, f, param_init, max = TRUE, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/smle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple maximum likelihood estimation — smle","text":"data data set work . can vector (one variable), data frame (one variables) intensity object. ... Additional arguments passed optim. f function maximized, typically log-likelihood function. function must two arguments: data param, must correspond data argument smle named vector parameter(s) estimated. param_init Either named vector proposed initial values parameter(s), function returns vector. parameter needed parameter param f already provided named vector. max f need maximized? Set FALSE require minimization f.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple maximum likelihood estimation — smle","text":"object class smle, list containing following components:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple maximum likelihood estimation — smle","text":"optim tool hard work hood. Extra arguments (e.g. method optimization used) can passed optim ... argument. Note contrary default optim arguments, smle tries solve maximization problem using method \"L-BFGS-B\" default (see optim documentation information).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple maximum likelihood estimation — smle","text":"","code":"set.seed(12345) data <- rlogis(100, location = 5, scale = 2) ll_logis <- function(data, param = c(location = 0, scale = 1)) {     sum(dlogis(x = data, location = param[[\"location\"]],                scale = param[[\"scale\"]], log = TRUE)) } res <- smle(data, ll_logis) res #> location: 5.111 (± 0.3764) #> scale: 2.179 (± 0.183) summary(res) #> Maximum likelihood estimation #>  #> Call: #> smle.default(data = data, f = ll_logis) #>  #> Coefficients: #>          Estimate Std.Err Z value    Pr(>z)     #> location  5.11143 0.37642  13.579 < 2.2e-16 *** #> scale     2.17878 0.18297  11.908 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # Using the magrittr syntax: require(magrittr) data %>% smle(ll_logis) #> location: 5.111 (± 0.3764) #> scale: 2.179 (± 0.183)  # Comparision with the output of fitdistr (MASS package), which works for a # limited number of predefined distributions: require(MASS) fitdistr(data, \"logistic\") #>    location      scale   #>   5.1114264   2.1787668  #>  (0.3764149) (0.1829733)  # Example with an intensity object: require(magrittr) require(dplyr) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following object is masked from ‘package:MASS’: #>  #>     select #> The following object is masked from ‘package:epiphy’: #>  #>     count #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data <- tomato_tswv$field_1929 %>%     filter(t == 1) %>%     incidence() %>%     clump(unit_size = c(x = 3, y = 3)) ll_betabinom <- function(data, param) {     sum(dbetabinom(x = data[[\"i\"]], size = data[[\"n\"]],                    prob = param[[\"prob\"]], theta = param[[\"theta\"]],                    log = TRUE)) } epsilon <- 1e-7 res <- smle(data, ll_betabinom, param_init = c(prob = 0.5, theta = 0.5),             lower = c(prob  = 0 + epsilon,                       theta = 0 + epsilon),             upper = c(prob = 1 - epsilon,                       theta = Inf)) res #> prob: 0.1813 (± 0.01191) #> theta: 0.04939 (± 0.01976) summary(res) #> Maximum likelihood estimation #>  #> Call: #> smle.intensity(data = data, f = ll_betabinom, param_init = c(prob = 0.5,  #>     theta = 0.5), lower = c(prob = 0 + epsilon, theta = 0 + epsilon),  #>     upper = c(prob = 1 - epsilon, theta = Inf)) #>  #> Coefficients: #>       Estimate  Std.Err Z value  Pr(>z)     #> prob  0.181326 0.011913 15.2204 < 2e-16 *** #> theta 0.049393 0.019759  2.4997 0.01243 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  param_init <- data.frame(lower = c(0 + epsilon, 0 + epsilon),                          start = c(0.5, 0.5),                          upper = c(1 - epsilon, Inf)) rownames(param_init) <- c(\"prob\", \"theta\") res <- smle(data, ll_betabinom, param_init) res #> prob: 0.1813 (± 0.01191) #> theta: 0.04939 (± 0.01976) summary(res) #> Maximum likelihood estimation #>  #> Call: #> smle.intensity(data = data, f = ll_betabinom, param_init = param_init) #>  #> Coefficients: #>       Estimate  Std.Err Z value  Pr(>z)     #> prob  0.181326 0.011913 15.2204 < 2e-16 *** #> theta 0.049393 0.019759  2.4997 0.01243 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://chgigot.github.io/epiphy/reference/smle_wrappers.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrappers using maximum likelihood estimation for some distributions — smle_wrappers","title":"Wrappers using maximum likelihood estimation for some distributions — smle_wrappers","text":"functions core fitting processes performed fit_two_distr.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle_wrappers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrappers using maximum likelihood estimation for some distributions — smle_wrappers","text":"","code":"smle_pois(data)  smle_nbinom(data)  smle_binom(data)  smle_betabinom(data)"},{"path":"https://chgigot.github.io/epiphy/reference/smle_wrappers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrappers using maximum likelihood estimation for some distributions — smle_wrappers","text":"data data set work . can vector (one variable), data frame (one variables) intensity object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle_wrappers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrappers using maximum likelihood estimation for some distributions — smle_wrappers","text":"See smle","code":""},{"path":"https://chgigot.github.io/epiphy/reference/smle_wrappers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrappers using maximum likelihood estimation for some distributions — smle_wrappers","text":"","code":"set.seed(12345) data <- rpois(100, lambda = 5) res <- smle_pois(data) res #> lambda: 5.06 (± 0.2249) summary(res) #> Maximum likelihood estimation #>  #> Call: #> smle.default(data = data, f = ll_pois, param_init = mme_pois) #>  #> Coefficients: #>        Estimate Std.Err Z value    Pr(>z)     #> lambda  5.06000 0.22494  22.494 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  data <- count(aphids) res <- smle_pois(data) res #> lambda: 63 (± 7.937) summary(res) #> Maximum likelihood estimation #>  #> Call: #> smle.default(data = data, f = ll_pois, param_init = mme_pois) #>  #> Coefficients: #>        Estimate Std.Err Z value    Pr(>z)     #> lambda  63.0000  7.9373  7.9373 2.067e-15 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://chgigot.github.io/epiphy/reference/spatial_hier.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial hierarchy analysis. — spatial_hier","title":"Spatial hierarchy analysis. — spatial_hier","text":"manner data collected provides information aggregation disease different levels spatial hierarchy (Hughes et al. 1997). example, sampling unit (upper level) can reported \"healthy\", diseased leaves (lower level) found within sampling unit.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/spatial_hier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial hierarchy analysis. — spatial_hier","text":"","code":"spatial_hier(low, high)"},{"path":"https://chgigot.github.io/epiphy/reference/spatial_hier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial hierarchy analysis. — spatial_hier","text":"low list intensity objects. high list intensity objects.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/spatial_hier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial hierarchy analysis. — spatial_hier","text":"spatial_hier object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/spatial_hier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial hierarchy analysis. — spatial_hier","text":"pairwise comparison levels, probability individual lower hierarchical level diseased denoted plow, phigh refers probability disease higher level. relationship two probabilities can written phigh = 1 - (1 - plow)^nu n parameter ranging 0 corresponding number individuals hierarchical level referenced plow. value n equal number individuals lower hierarchical level contained unit higher level (n low ), suggests aggregation disease incidence lower level. Conversely, value n less n low indicative aggregation level. value n can interpreted effective sample size (Hughes Gottwald 1999; Madden Hughes 1999) statistical sense value indicates number independent pieces information lower level. , effective sample size concerns equating zero-term binomial distribution zero-term overdispersed distribution, described Madden Hughes (1999). Using complementary log-log transformation, CLL(x) = ln(-ln(1-x)), one can rewrite Equation 5 follows (Madden et al. 2007): CLL(phigh) = ln(nu) + CLL(plow) value ln(n) can obtained intercept linear regression slope constrained 1.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/spatial_hier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial hierarchy analysis. — spatial_hier","text":"","code":"my_data_low <- incidence(tomato_tswv$field_1929) my_data_low <- clump(my_data_low, c(x = 3, y = 3)) my_data_high <- my_data_low my_data_high$data$n <- 1 my_data_high$data$i <- ifelse(my_data_high$data$i > 0, 1, 0) my_data_low  <- split(my_data_low, by = \"t\") my_data_high <- split(my_data_high, by = \"t\") res <- spatial_hier(my_data_low, my_data_high) #> Warning: Only 3 cloglog data points were used to perform the regression.  res #> Spatial hierarchy analysis for 'incidence' data. #>  #> Parameter estimate: #>        Estimate Std. Error #> log_nu 2.000362  0.1198758 #> nu     7.391731  0.8860894 summary(res) #>  #> Call: #> spatial_hier(low = my_data_low, high = my_data_high) #>  #> Residuals: #>        1        2        3  #>  0.02779  0.19234 -0.22013  #>  #> Coefficients: #>        Estimate Std. Error t value Pr(>|t|)    #> log_nu   2.0004     0.1199  16.687  0.00357 ** #> nu       7.3917     0.8861   8.342  0.01407 *  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.2076 on 2 degrees of freedom #>  plot(res)"},{"path":"https://chgigot.github.io/epiphy/reference/split.intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide into groups and reassemble. — split.intensity","title":"Divide into groups and reassemble. — split.intensity","text":"Divide groups reassemble.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/split.intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide into groups and reassemble. — split.intensity","text":"","code":"# S3 method for intensity split(x, f, drop = FALSE, ..., by, unit_size)"},{"path":"https://chgigot.github.io/epiphy/reference/split.intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide into groups and reassemble. — split.intensity","text":"x vector data frame containing values divided groups. f ‘factor’ sense .factor(f)     defines grouping, list factors case     interaction used grouping. x data frame,     f can also formula form  ~ g split     variable g, generally form  ~ g1 +       ... + gk split interaction variables     g1, ..., gk, variables evaluated     data frame x using usual non-standard evaluation     rules. drop logical indicating levels occur dropped     (f factor list). ... potential arguments passed methods. name(s) variable(s) define(s) grouping. unit_size Size group unit. must named vector, names corresponding non-observational variables (.e. space time variables). size variable data set multiple provided value unit_size, sampling units (last ones) dropped clumps individuals remain even throughout data set.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/split.intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide into groups and reassemble. — split.intensity","text":"list intensity objects.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/split.intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Divide into groups and reassemble. — split.intensity","text":"","code":"my_incidence <- incidence(tomato_tswv$field_1929) plot(my_incidence, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found   my_incidence_spl1 <- split(my_incidence, by = \"t\") my_incidence_spl2 <- split(my_incidence, unit_size = c(x = 8, y = 20, t = 1))"},{"path":"https://chgigot.github.io/epiphy/reference/threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"To go to higher level in the hierarchy. — threshold","title":"To go to higher level in the hierarchy. — threshold","text":"function transforms current numeric vector intensity data set \"simplified black white image\" data set: every value disease intensity given threshold given value 0 1, respectively.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To go to higher level in the hierarchy. — threshold","text":"","code":"threshold(data, value, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To go to higher level in the hierarchy. — threshold","text":"data numeric vector intensity object. value intensity values lower equal value  set 0. values set 1. ... Additional arguments passed methods.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To go to higher level in the hierarchy. — threshold","text":"numeric vector intensity object.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/threshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"To go to higher level in the hierarchy. — threshold","text":"default, everything 0 given 1, 0 stays 0. threshold thus useful report whole sampling unit \"healthy\" (0), diseased individual found within sampling unit, \"diseased\" (1) least one diseased individual found.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To go to higher level in the hierarchy. — threshold","text":"","code":"my_incidence <- incidence(tomato_tswv$field_1929) plot(my_incidence, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found   my_incidence_clumped_1 <- clump(my_incidence, unit_size = c(x = 3, y = 3)) plot(my_incidence_clumped_1, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found   my_incidence_thr <- threshold(my_incidence_clumped_1, value = 4) plot(my_incidence_thr, type = \"all\") #> Warning: Computation failed in `stat_summary()` #> Caused by error in `get()`: #> ! object 'mean_sdl' of mode 'function' was not found"},{"path":"https://chgigot.github.io/epiphy/reference/tobacco_viruses.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of tobacco plants infected with viruses. — tobacco_viruses","title":"Incidence of tobacco plants infected with viruses. — tobacco_viruses","text":"Experimental plot consisted 75 sampling units 40 tobacco plants one.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/tobacco_viruses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of tobacco plants infected with viruses. — tobacco_viruses","text":"","code":"tobacco_viruses"},{"path":"https://chgigot.github.io/epiphy/reference/tobacco_viruses.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of tobacco plants infected with viruses. — tobacco_viruses","text":"data frame 75 rows 2 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/tobacco_viruses.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of tobacco plants infected with viruses. — tobacco_viruses","text":"Madden LV, Pirone TP, Raccah B. 1987. Analysis spatial patterns     virus-diseased tobacco plants. Phytopathology 77, 1409–1417.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/tomato_tswv.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence of tomato spotted wilt virus (TSWV) disease in field trials. — tomato_tswv","title":"Incidence of tomato spotted wilt virus (TSWV) disease in field trials. — tomato_tswv","text":"Intensively mapped TSWV incidence data reported Cochran (1936) Bald (1937). disease assessments performed field trials Waite Institute (Australia) 1928 1929. TSWV virus disease spread thrips.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/tomato_tswv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence of tomato spotted wilt virus (TSWV) disease in field trials. — tomato_tswv","text":"","code":"tomato_tswv"},{"path":"https://chgigot.github.io/epiphy/reference/tomato_tswv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incidence of tomato spotted wilt virus (TSWV) disease in field trials. — tomato_tswv","text":"two data frames: field_1928: data frame 11088 rows 8 variables: field_1929: data frame 4320 rows 5 variables:","code":""},{"path":"https://chgigot.github.io/epiphy/reference/tomato_tswv.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incidence of tomato spotted wilt virus (TSWV) disease in field trials. — tomato_tswv","text":"Cochran WG. 1936. statistical analysis field counts     diseased plants. Supplement Journal Royal Statistical     Society 3, 49–67. doi:10.2307/2983677 Bald JG. 1937. Investigations \"spotted wilt\" tomatoes. III.     Infection field plots. Bulletin 106. Melbourne, Australia: Council     Scientific Industrial Research.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/tomato_tswv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incidence of tomato spotted wilt virus (TSWV) disease in field trials. — tomato_tswv","text":"data set field_1928, reported Bald (1937), set four plots. plot consisted 14 rows containing 33 plants , 462 plants plot. tomato variety Early Dwarf Red used two plots, variety Burwood Prize two. tomatoes planted 15th October 1928. two plots dedicated given variety experienced different irrigation practices, using either overhead sprays trenches. Otherwise, treated alike. Weekly records TSWV incidence performed 6th November 12th December. data set field_1929, reported Cochran (1936), field 24 rows containing 60 plants , 1440 plants. tomatoes planted 26th November 1929. TSWV incidence records made 18th December 1929, 31st December 1929 22nd January 1930 reported data set.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/vcov.smle.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Variance-Covariance Matrix for a Fitted Model Object — vcov.smle","title":"Calculate Variance-Covariance Matrix for a Fitted Model Object — vcov.smle","text":"Returns variance-covariance matrix main parameters   fitted model object.  “main” parameters model   correspond returned coef, typically   contain nuisance scale parameter (sigma).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/vcov.smle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Variance-Covariance Matrix for a Fitted Model Object — vcov.smle","text":"","code":"# S3 method for smle vcov(object, ...)"},{"path":"https://chgigot.github.io/epiphy/reference/vcov.smle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Variance-Covariance Matrix for a Fitted Model Object — vcov.smle","text":"object fitted model object, typically.  Sometimes also     summary() object fitted model. ... additional arguments method functions.      glm method can used pass     dispersion parameter.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/vcov.smle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Variance-Covariance Matrix for a Fitted Model Object — vcov.smle","text":"matrix estimated covariances parameter estimates   linear non-linear predictor model.    row column names corresponding parameter names given  coef method. coefficients (linear) model undetermined   hence NA linearly dependent terms ( “specified” model), also called  “aliased”, see alias, since R version 3.5.0,  vcov() (iff complete = TRUE, .e., default  lm etc, aov) contains corresponding rows   columns NAs, wherever coef() always   contained NAs.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-test. — z.test","title":"Z-test. — z.test","text":"Performs z-tests Fisher's aggregation indices (computed either count incidence data).","code":""},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-test. — z.test","text":"","code":"z.test(x, ...)  # S3 method for default z.test(x, ...)  # S3 method for fisher z.test(   x,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   ... )"},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-test. — z.test","text":"x output agg_index function method = \"fisher\" parameter. ... yet implemented. alternative character string specifying alternative hypothesis. must one \"two.sided\" (default), \"less\" \"greater\". conf.level confidence level interval.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-test. — z.test","text":"kind object one returns stats chisq.test function example.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Z-test. — z.test","text":"two-sided tests confidence level 95 spatial pattern random. z < -1.96 z > 1.96, uniform aggregated, respectively.","code":""},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Z-test. — z.test","text":"count incidence data: Moradi-Vajargah M, Golizadeh , Rafiee-Dastjerdi H, Zalucki MP, Hassanpour M, Naseri B. 2011. Population density spatial distribution pattern Hypera postica (Coleoptera: Curculionidae) Ardabil, Iran. Notulae Botanicae Horti Agrobotanici Cluj-Napoca, 39(2): 42-48. Sun P, Madden LV. 1997. Using normal approximation test binomial distribution. Biometrical journal, 39(5): 533-544.","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/reference/z.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Z-test. — z.test","text":"","code":"# For incidence data: my_incidence <- incidence(tobacco_viruses) my_fisher <- agg_index(my_incidence, method = \"fisher\") z.test(my_fisher) #>  #> \tOne-sample z-test #>  #> data:  my_fisher #> z = 13.207, p-value < 2.2e-16 #> alternative hypothesis: two.sided #>"},{"path":[]},{"path":"https://chgigot.github.io/epiphy/news/index.html","id":"epiphy-050","dir":"Changelog","previous_headings":"","what":"epiphy 0.5.0","title":"epiphy 0.5.0","text":"CRAN release: 2023-11-16 Works now R >= 4. ‘Return value’ section exported functions. URL website updated.","code":""},{"path":"https://chgigot.github.io/epiphy/news/index.html","id":"epiphy-034","dir":"Changelog","previous_headings":"","what":"epiphy 0.3.4","title":"epiphy 0.3.4","text":"CRAN release: 2018-05-24 Minor bug fixes. Improve documentation. Add Travis CI website.","code":""},{"path":"https://chgigot.github.io/epiphy/news/index.html","id":"epiphy-033","dir":"Changelog","previous_headings":"","what":"epiphy 0.3.3","title":"epiphy 0.3.3","text":"Add grayscale feature plot intensity objects. Improve documentation examples (sadie, intensity objects).","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/news/index.html","id":"major-new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"Major new features","title":"epiphy 0.3.2","text":"Fixed bugs SADIE algorithm. Mapcomp procedure proposed Lavigne et al. (2010).","code":""},{"path":[]},{"path":"https://chgigot.github.io/epiphy/news/index.html","id":"major-new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"Major new features","title":"epiphy 0.3.0","text":"Computation aggregation indices (Fisher’s, Lloyd’s, etc.). Distribution fitting, two distributions, count incidence data. thus R alternative BBD software Madden & Hughes (1994) incidence data. Spatial hierarchy analysis. Power law analysis (Taylor’s binary forms). first working version SADIE procedure. Twelve historical data sets. Many features!","code":""}]
